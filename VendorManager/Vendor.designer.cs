#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VendorManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Services")]
	public partial class VendorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIntegrationServiceType(IntegrationServiceType instance);
    partial void UpdateIntegrationServiceType(IntegrationServiceType instance);
    partial void DeleteIntegrationServiceType(IntegrationServiceType instance);
    partial void InsertIntegrationVendor(IntegrationVendor instance);
    partial void UpdateIntegrationVendor(IntegrationVendor instance);
    partial void DeleteIntegrationVendor(IntegrationVendor instance);
    partial void InsertIntegrationVendorProduct(IntegrationVendorProduct instance);
    partial void UpdateIntegrationVendorProduct(IntegrationVendorProduct instance);
    partial void DeleteIntegrationVendorProduct(IntegrationVendorProduct instance);
    partial void InsertIntegrationProduct(IntegrationProduct instance);
    partial void UpdateIntegrationProduct(IntegrationProduct instance);
    partial void DeleteIntegrationProduct(IntegrationProduct instance);
    partial void InsertIntegrationSettingType(IntegrationSettingType instance);
    partial void UpdateIntegrationSettingType(IntegrationSettingType instance);
    partial void DeleteIntegrationSettingType(IntegrationSettingType instance);
    partial void InsertIntegrationSettingTypeSourceObject(IntegrationSettingTypeSourceObject instance);
    partial void UpdateIntegrationSettingTypeSourceObject(IntegrationSettingTypeSourceObject instance);
    partial void DeleteIntegrationSettingTypeSourceObject(IntegrationSettingTypeSourceObject instance);
    partial void InsertIntegrationSourceObjectType(IntegrationSourceObjectType instance);
    partial void UpdateIntegrationSourceObjectType(IntegrationSourceObjectType instance);
    partial void DeleteIntegrationSourceObjectType(IntegrationSourceObjectType instance);
    partial void InsertIntegrationSetting(IntegrationSetting instance);
    partial void UpdateIntegrationSetting(IntegrationSetting instance);
    partial void DeleteIntegrationSetting(IntegrationSetting instance);
    partial void InsertLogData(LogData instance);
    partial void UpdateLogData(LogData instance);
    partial void DeleteLogData(LogData instance);
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    partial void InsertAuditLog(AuditLog instance);
    partial void UpdateAuditLog(AuditLog instance);
    partial void DeleteAuditLog(AuditLog instance);
    partial void InsertIntegrationStatus(IntegrationStatus instance);
    partial void UpdateIntegrationStatus(IntegrationStatus instance);
    partial void DeleteIntegrationStatus(IntegrationStatus instance);
    partial void InsertIntegrationStatusDetail(IntegrationStatusDetail instance);
    partial void UpdateIntegrationStatusDetail(IntegrationStatusDetail instance);
    partial void DeleteIntegrationStatusDetail(IntegrationStatusDetail instance);
    #endregion
		
		public VendorDataContext() : 
				base(global::VendorManager.Properties.Settings.Default.ServicesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IntegrationServiceType> IntegrationServiceTypes
		{
			get
			{
				return this.GetTable<IntegrationServiceType>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationVendor> IntegrationVendors
		{
			get
			{
				return this.GetTable<IntegrationVendor>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationVendorProduct> IntegrationVendorProducts
		{
			get
			{
				return this.GetTable<IntegrationVendorProduct>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationProduct> IntegrationProducts
		{
			get
			{
				return this.GetTable<IntegrationProduct>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationSettingType> IntegrationSettingTypes
		{
			get
			{
				return this.GetTable<IntegrationSettingType>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationSettingTypeSourceObject> IntegrationSettingTypeSourceObjects
		{
			get
			{
				return this.GetTable<IntegrationSettingTypeSourceObject>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationSourceObjectType> IntegrationSourceObjectTypes
		{
			get
			{
				return this.GetTable<IntegrationSourceObjectType>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationSetting> IntegrationSettings
		{
			get
			{
				return this.GetTable<IntegrationSetting>();
			}
		}
		
		public System.Data.Linq.Table<LogData> LogDatas
		{
			get
			{
				return this.GetTable<LogData>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loans
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
		
		public System.Data.Linq.Table<AuditLog> AuditLogs
		{
			get
			{
				return this.GetTable<AuditLog>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationStatus> IntegrationStatus
		{
			get
			{
				return this.GetTable<IntegrationStatus>();
			}
		}
		
		public System.Data.Linq.Table<IntegrationStatusDetail> IntegrationStatusDetails
		{
			get
			{
				return this.GetTable<IntegrationStatusDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationServiceType")]
	public partial class IntegrationServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationServiceTypeId;
		
		private string _Name;
		
		private string _Descr;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<IntegrationProduct> _IntegrationProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationServiceTypeIdChanging(int value);
    partial void OnIntegrationServiceTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public IntegrationServiceType()
		{
			this._IntegrationProducts = new EntitySet<IntegrationProduct>(new Action<IntegrationProduct>(this.attach_IntegrationProducts), new Action<IntegrationProduct>(this.detach_IntegrationProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationServiceTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IntegrationServiceTypeId
		{
			get
			{
				return this._IntegrationServiceTypeId;
			}
			set
			{
				if ((this._IntegrationServiceTypeId != value))
				{
					this.OnIntegrationServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationServiceTypeId = value;
					this.SendPropertyChanged("IntegrationServiceTypeId");
					this.OnIntegrationServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationServiceType_IntegrationProduct", Storage="_IntegrationProducts", ThisKey="IntegrationServiceTypeId", OtherKey="IntegrationServiceTypeId")]
		public EntitySet<IntegrationProduct> IntegrationProducts
		{
			get
			{
				return this._IntegrationProducts;
			}
			set
			{
				this._IntegrationProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationProducts(IntegrationProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationServiceType = this;
		}
		
		private void detach_IntegrationProducts(IntegrationProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationVendor")]
	public partial class IntegrationVendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationVendorId;
		
		private string _Name;
		
		private string _Code;
		
		private string _Descr;
		
		private string _SchemaType;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<IntegrationVendorProduct> _IntegrationVendorProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationVendorIdChanging(int value);
    partial void OnIntegrationVendorIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnSchemaTypeChanging(string value);
    partial void OnSchemaTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public IntegrationVendor()
		{
			this._IntegrationVendorProducts = new EntitySet<IntegrationVendorProduct>(new Action<IntegrationVendorProduct>(this.attach_IntegrationVendorProducts), new Action<IntegrationVendorProduct>(this.detach_IntegrationVendorProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationVendorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IntegrationVendorId
		{
			get
			{
				return this._IntegrationVendorId;
			}
			set
			{
				if ((this._IntegrationVendorId != value))
				{
					this.OnIntegrationVendorIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationVendorId = value;
					this.SendPropertyChanged("IntegrationVendorId");
					this.OnIntegrationVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemaType", DbType="VarChar(100)")]
		public string SchemaType
		{
			get
			{
				return this._SchemaType;
			}
			set
			{
				if ((this._SchemaType != value))
				{
					this.OnSchemaTypeChanging(value);
					this.SendPropertyChanging();
					this._SchemaType = value;
					this.SendPropertyChanged("SchemaType");
					this.OnSchemaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationVendor_IntegrationVendorProduct", Storage="_IntegrationVendorProducts", ThisKey="IntegrationVendorId", OtherKey="IntegrationVendorId")]
		public EntitySet<IntegrationVendorProduct> IntegrationVendorProducts
		{
			get
			{
				return this._IntegrationVendorProducts;
			}
			set
			{
				this._IntegrationVendorProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationVendorProducts(IntegrationVendorProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationVendor = this;
		}
		
		private void detach_IntegrationVendorProducts(IntegrationVendorProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationVendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationVendorProduct")]
	public partial class IntegrationVendorProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationVendorProductId;
		
		private System.Nullable<int> _IntegrationProductId;
		
		private System.Nullable<int> _IntegrationVendorId;
		
		private string _IntegrationHelperFQN;
		
		private string _SimulatorURL;
		
		private string _Notes;
		
		private string _Comments;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<IntegrationVendor> _IntegrationVendor;
		
		private EntityRef<IntegrationProduct> _IntegrationProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationVendorProductIdChanging(int value);
    partial void OnIntegrationVendorProductIdChanged();
    partial void OnIntegrationProductIdChanging(System.Nullable<int> value);
    partial void OnIntegrationProductIdChanged();
    partial void OnIntegrationVendorIdChanging(System.Nullable<int> value);
    partial void OnIntegrationVendorIdChanged();
    partial void OnIntegrationHelperFQNChanging(string value);
    partial void OnIntegrationHelperFQNChanged();
    partial void OnSimulatorURLChanging(string value);
    partial void OnSimulatorURLChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public IntegrationVendorProduct()
		{
			this._IntegrationVendor = default(EntityRef<IntegrationVendor>);
			this._IntegrationProduct = default(EntityRef<IntegrationProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationVendorProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IntegrationVendorProductId
		{
			get
			{
				return this._IntegrationVendorProductId;
			}
			set
			{
				if ((this._IntegrationVendorProductId != value))
				{
					this.OnIntegrationVendorProductIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationVendorProductId = value;
					this.SendPropertyChanged("IntegrationVendorProductId");
					this.OnIntegrationVendorProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationProductId", DbType="Int")]
		public System.Nullable<int> IntegrationProductId
		{
			get
			{
				return this._IntegrationProductId;
			}
			set
			{
				if ((this._IntegrationProductId != value))
				{
					if (this._IntegrationProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationProductIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationProductId = value;
					this.SendPropertyChanged("IntegrationProductId");
					this.OnIntegrationProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationVendorId", DbType="Int")]
		public System.Nullable<int> IntegrationVendorId
		{
			get
			{
				return this._IntegrationVendorId;
			}
			set
			{
				if ((this._IntegrationVendorId != value))
				{
					if (this._IntegrationVendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationVendorIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationVendorId = value;
					this.SendPropertyChanged("IntegrationVendorId");
					this.OnIntegrationVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationHelperFQN", DbType="VarChar(MAX)")]
		public string IntegrationHelperFQN
		{
			get
			{
				return this._IntegrationHelperFQN;
			}
			set
			{
				if ((this._IntegrationHelperFQN != value))
				{
					this.OnIntegrationHelperFQNChanging(value);
					this.SendPropertyChanging();
					this._IntegrationHelperFQN = value;
					this.SendPropertyChanged("IntegrationHelperFQN");
					this.OnIntegrationHelperFQNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimulatorURL", DbType="VarChar(MAX)")]
		public string SimulatorURL
		{
			get
			{
				return this._SimulatorURL;
			}
			set
			{
				if ((this._SimulatorURL != value))
				{
					this.OnSimulatorURLChanging(value);
					this.SendPropertyChanging();
					this._SimulatorURL = value;
					this.SendPropertyChanged("SimulatorURL");
					this.OnSimulatorURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationVendor_IntegrationVendorProduct", Storage="_IntegrationVendor", ThisKey="IntegrationVendorId", OtherKey="IntegrationVendorId", IsForeignKey=true)]
		public IntegrationVendor IntegrationVendor
		{
			get
			{
				return this._IntegrationVendor.Entity;
			}
			set
			{
				IntegrationVendor previousValue = this._IntegrationVendor.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationVendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationVendor.Entity = null;
						previousValue.IntegrationVendorProducts.Remove(this);
					}
					this._IntegrationVendor.Entity = value;
					if ((value != null))
					{
						value.IntegrationVendorProducts.Add(this);
						this._IntegrationVendorId = value.IntegrationVendorId;
					}
					else
					{
						this._IntegrationVendorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IntegrationVendor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationProduct_IntegrationVendorProduct", Storage="_IntegrationProduct", ThisKey="IntegrationProductId", OtherKey="IntegrationProductId", IsForeignKey=true)]
		public IntegrationProduct IntegrationProduct
		{
			get
			{
				return this._IntegrationProduct.Entity;
			}
			set
			{
				IntegrationProduct previousValue = this._IntegrationProduct.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationProduct.Entity = null;
						previousValue.IntegrationVendorProducts.Remove(this);
					}
					this._IntegrationProduct.Entity = value;
					if ((value != null))
					{
						value.IntegrationVendorProducts.Add(this);
						this._IntegrationProductId = value.IntegrationProductId;
					}
					else
					{
						this._IntegrationProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IntegrationProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationProduct")]
	public partial class IntegrationProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationProductId;
		
		private int _IntegrationServiceTypeId;
		
		private string _Name;
		
		private string _Code;
		
		private string _Descr;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<IntegrationVendorProduct> _IntegrationVendorProducts;
		
		private EntityRef<IntegrationServiceType> _IntegrationServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationProductIdChanging(int value);
    partial void OnIntegrationProductIdChanged();
    partial void OnIntegrationServiceTypeIdChanging(int value);
    partial void OnIntegrationServiceTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public IntegrationProduct()
		{
			this._IntegrationVendorProducts = new EntitySet<IntegrationVendorProduct>(new Action<IntegrationVendorProduct>(this.attach_IntegrationVendorProducts), new Action<IntegrationVendorProduct>(this.detach_IntegrationVendorProducts));
			this._IntegrationServiceType = default(EntityRef<IntegrationServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IntegrationProductId
		{
			get
			{
				return this._IntegrationProductId;
			}
			set
			{
				if ((this._IntegrationProductId != value))
				{
					this.OnIntegrationProductIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationProductId = value;
					this.SendPropertyChanged("IntegrationProductId");
					this.OnIntegrationProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationServiceTypeId", DbType="Int NOT NULL")]
		public int IntegrationServiceTypeId
		{
			get
			{
				return this._IntegrationServiceTypeId;
			}
			set
			{
				if ((this._IntegrationServiceTypeId != value))
				{
					if (this._IntegrationServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationServiceTypeId = value;
					this.SendPropertyChanged("IntegrationServiceTypeId");
					this.OnIntegrationServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationProduct_IntegrationVendorProduct", Storage="_IntegrationVendorProducts", ThisKey="IntegrationProductId", OtherKey="IntegrationProductId")]
		public EntitySet<IntegrationVendorProduct> IntegrationVendorProducts
		{
			get
			{
				return this._IntegrationVendorProducts;
			}
			set
			{
				this._IntegrationVendorProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationServiceType_IntegrationProduct", Storage="_IntegrationServiceType", ThisKey="IntegrationServiceTypeId", OtherKey="IntegrationServiceTypeId", IsForeignKey=true)]
		public IntegrationServiceType IntegrationServiceType
		{
			get
			{
				return this._IntegrationServiceType.Entity;
			}
			set
			{
				IntegrationServiceType previousValue = this._IntegrationServiceType.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationServiceType.Entity = null;
						previousValue.IntegrationProducts.Remove(this);
					}
					this._IntegrationServiceType.Entity = value;
					if ((value != null))
					{
						value.IntegrationProducts.Add(this);
						this._IntegrationServiceTypeId = value.IntegrationServiceTypeId;
					}
					else
					{
						this._IntegrationServiceTypeId = default(int);
					}
					this.SendPropertyChanged("IntegrationServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationVendorProducts(IntegrationVendorProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationProduct = this;
		}
		
		private void detach_IntegrationVendorProducts(IntegrationVendorProduct entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationSettingType")]
	public partial class IntegrationSettingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationSettingTypeId;
		
		private string _Name;
		
		private string _Code;
		
		private string _Descr;
		
		private string _DataEntryType;
		
		private string _DefatulValue;
		
		private string _Restrictions;
		
		private EntitySet<IntegrationSettingTypeSourceObject> _IntegrationSettingTypeSourceObjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationSettingTypeIdChanging(int value);
    partial void OnIntegrationSettingTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnDataEntryTypeChanging(string value);
    partial void OnDataEntryTypeChanged();
    partial void OnDefatulValueChanging(string value);
    partial void OnDefatulValueChanged();
    partial void OnRestrictionsChanging(string value);
    partial void OnRestrictionsChanged();
    #endregion
		
		public IntegrationSettingType()
		{
			this._IntegrationSettingTypeSourceObjects = new EntitySet<IntegrationSettingTypeSourceObject>(new Action<IntegrationSettingTypeSourceObject>(this.attach_IntegrationSettingTypeSourceObjects), new Action<IntegrationSettingTypeSourceObject>(this.detach_IntegrationSettingTypeSourceObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSettingTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IntegrationSettingTypeId
		{
			get
			{
				return this._IntegrationSettingTypeId;
			}
			set
			{
				if ((this._IntegrationSettingTypeId != value))
				{
					this.OnIntegrationSettingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSettingTypeId = value;
					this.SendPropertyChanged("IntegrationSettingTypeId");
					this.OnIntegrationSettingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEntryType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DataEntryType
		{
			get
			{
				return this._DataEntryType;
			}
			set
			{
				if ((this._DataEntryType != value))
				{
					this.OnDataEntryTypeChanging(value);
					this.SendPropertyChanging();
					this._DataEntryType = value;
					this.SendPropertyChanged("DataEntryType");
					this.OnDataEntryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefatulValue", DbType="VarChar(MAX)")]
		public string DefatulValue
		{
			get
			{
				return this._DefatulValue;
			}
			set
			{
				if ((this._DefatulValue != value))
				{
					this.OnDefatulValueChanging(value);
					this.SendPropertyChanging();
					this._DefatulValue = value;
					this.SendPropertyChanged("DefatulValue");
					this.OnDefatulValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restrictions", DbType="VarChar(MAX)")]
		public string Restrictions
		{
			get
			{
				return this._Restrictions;
			}
			set
			{
				if ((this._Restrictions != value))
				{
					this.OnRestrictionsChanging(value);
					this.SendPropertyChanging();
					this._Restrictions = value;
					this.SendPropertyChanged("Restrictions");
					this.OnRestrictionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSettingType_IntegrationSettingTypeSourceObject", Storage="_IntegrationSettingTypeSourceObjects", ThisKey="IntegrationSettingTypeId", OtherKey="IntegrationSettingTypeId")]
		public EntitySet<IntegrationSettingTypeSourceObject> IntegrationSettingTypeSourceObjects
		{
			get
			{
				return this._IntegrationSettingTypeSourceObjects;
			}
			set
			{
				this._IntegrationSettingTypeSourceObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationSettingTypeSourceObjects(IntegrationSettingTypeSourceObject entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSettingType = this;
		}
		
		private void detach_IntegrationSettingTypeSourceObjects(IntegrationSettingTypeSourceObject entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSettingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationSettingTypeSourceObject")]
	public partial class IntegrationSettingTypeSourceObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationSettingTypeSourceObjectId;
		
		private System.Nullable<int> _IntegrationSettingTypeId;
		
		private System.Nullable<int> _IntegrationSourceObjectTypeId;
		
		private EntitySet<IntegrationSetting> _IntegrationSettings;
		
		private EntityRef<IntegrationSettingType> _IntegrationSettingType;
		
		private EntityRef<IntegrationSourceObjectType> _IntegrationSourceObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationSettingTypeSourceObjectIdChanging(int value);
    partial void OnIntegrationSettingTypeSourceObjectIdChanged();
    partial void OnIntegrationSettingTypeIdChanging(System.Nullable<int> value);
    partial void OnIntegrationSettingTypeIdChanged();
    partial void OnIntegrationSourceObjectTypeIdChanging(System.Nullable<int> value);
    partial void OnIntegrationSourceObjectTypeIdChanged();
    #endregion
		
		public IntegrationSettingTypeSourceObject()
		{
			this._IntegrationSettings = new EntitySet<IntegrationSetting>(new Action<IntegrationSetting>(this.attach_IntegrationSettings), new Action<IntegrationSetting>(this.detach_IntegrationSettings));
			this._IntegrationSettingType = default(EntityRef<IntegrationSettingType>);
			this._IntegrationSourceObjectType = default(EntityRef<IntegrationSourceObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSettingTypeSourceObjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IntegrationSettingTypeSourceObjectId
		{
			get
			{
				return this._IntegrationSettingTypeSourceObjectId;
			}
			set
			{
				if ((this._IntegrationSettingTypeSourceObjectId != value))
				{
					this.OnIntegrationSettingTypeSourceObjectIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSettingTypeSourceObjectId = value;
					this.SendPropertyChanged("IntegrationSettingTypeSourceObjectId");
					this.OnIntegrationSettingTypeSourceObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSettingTypeId", DbType="Int")]
		public System.Nullable<int> IntegrationSettingTypeId
		{
			get
			{
				return this._IntegrationSettingTypeId;
			}
			set
			{
				if ((this._IntegrationSettingTypeId != value))
				{
					if (this._IntegrationSettingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationSettingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSettingTypeId = value;
					this.SendPropertyChanged("IntegrationSettingTypeId");
					this.OnIntegrationSettingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSourceObjectTypeId", DbType="Int")]
		public System.Nullable<int> IntegrationSourceObjectTypeId
		{
			get
			{
				return this._IntegrationSourceObjectTypeId;
			}
			set
			{
				if ((this._IntegrationSourceObjectTypeId != value))
				{
					if (this._IntegrationSourceObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationSourceObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSourceObjectTypeId = value;
					this.SendPropertyChanged("IntegrationSourceObjectTypeId");
					this.OnIntegrationSourceObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSettingTypeSourceObject_IntegrationSetting", Storage="_IntegrationSettings", ThisKey="IntegrationSettingTypeSourceObjectId", OtherKey="IntegrationSettingTypeSourceObjectId")]
		public EntitySet<IntegrationSetting> IntegrationSettings
		{
			get
			{
				return this._IntegrationSettings;
			}
			set
			{
				this._IntegrationSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSettingType_IntegrationSettingTypeSourceObject", Storage="_IntegrationSettingType", ThisKey="IntegrationSettingTypeId", OtherKey="IntegrationSettingTypeId", IsForeignKey=true)]
		public IntegrationSettingType IntegrationSettingType
		{
			get
			{
				return this._IntegrationSettingType.Entity;
			}
			set
			{
				IntegrationSettingType previousValue = this._IntegrationSettingType.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationSettingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationSettingType.Entity = null;
						previousValue.IntegrationSettingTypeSourceObjects.Remove(this);
					}
					this._IntegrationSettingType.Entity = value;
					if ((value != null))
					{
						value.IntegrationSettingTypeSourceObjects.Add(this);
						this._IntegrationSettingTypeId = value.IntegrationSettingTypeId;
					}
					else
					{
						this._IntegrationSettingTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IntegrationSettingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSourceObjectType_IntegrationSettingTypeSourceObject", Storage="_IntegrationSourceObjectType", ThisKey="IntegrationSourceObjectTypeId", OtherKey="IntegrationSourceObjectTypeId", IsForeignKey=true)]
		public IntegrationSourceObjectType IntegrationSourceObjectType
		{
			get
			{
				return this._IntegrationSourceObjectType.Entity;
			}
			set
			{
				IntegrationSourceObjectType previousValue = this._IntegrationSourceObjectType.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationSourceObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationSourceObjectType.Entity = null;
						previousValue.IntegrationSettingTypeSourceObjects.Remove(this);
					}
					this._IntegrationSourceObjectType.Entity = value;
					if ((value != null))
					{
						value.IntegrationSettingTypeSourceObjects.Add(this);
						this._IntegrationSourceObjectTypeId = value.IntegrationSourceObjectTypeId;
					}
					else
					{
						this._IntegrationSourceObjectTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IntegrationSourceObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationSettings(IntegrationSetting entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSettingTypeSourceObject = this;
		}
		
		private void detach_IntegrationSettings(IntegrationSetting entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSettingTypeSourceObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationSourceObjectType")]
	public partial class IntegrationSourceObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationSourceObjectTypeId;
		
		private string _Name;
		
		private string _Descr;
		
		private System.Nullable<int> _Order;
		
		private EntitySet<IntegrationSettingTypeSourceObject> _IntegrationSettingTypeSourceObjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationSourceObjectTypeIdChanging(int value);
    partial void OnIntegrationSourceObjectTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    #endregion
		
		public IntegrationSourceObjectType()
		{
			this._IntegrationSettingTypeSourceObjects = new EntitySet<IntegrationSettingTypeSourceObject>(new Action<IntegrationSettingTypeSourceObject>(this.attach_IntegrationSettingTypeSourceObjects), new Action<IntegrationSettingTypeSourceObject>(this.detach_IntegrationSettingTypeSourceObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSourceObjectTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IntegrationSourceObjectTypeId
		{
			get
			{
				return this._IntegrationSourceObjectTypeId;
			}
			set
			{
				if ((this._IntegrationSourceObjectTypeId != value))
				{
					this.OnIntegrationSourceObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSourceObjectTypeId = value;
					this.SendPropertyChanged("IntegrationSourceObjectTypeId");
					this.OnIntegrationSourceObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1024)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSourceObjectType_IntegrationSettingTypeSourceObject", Storage="_IntegrationSettingTypeSourceObjects", ThisKey="IntegrationSourceObjectTypeId", OtherKey="IntegrationSourceObjectTypeId")]
		public EntitySet<IntegrationSettingTypeSourceObject> IntegrationSettingTypeSourceObjects
		{
			get
			{
				return this._IntegrationSettingTypeSourceObjects;
			}
			set
			{
				this._IntegrationSettingTypeSourceObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationSettingTypeSourceObjects(IntegrationSettingTypeSourceObject entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSourceObjectType = this;
		}
		
		private void detach_IntegrationSettingTypeSourceObjects(IntegrationSettingTypeSourceObject entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationSourceObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationSetting")]
	public partial class IntegrationSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntegrationSettingId;
		
		private System.Nullable<int> _IntegrationSettingTypeSourceObjectId;
		
		private string _SettingSourceObjectId;
		
		private string _Value;
		
		private int _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<IntegrationSettingTypeSourceObject> _IntegrationSettingTypeSourceObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationSettingIdChanging(int value);
    partial void OnIntegrationSettingIdChanged();
    partial void OnIntegrationSettingTypeSourceObjectIdChanging(System.Nullable<int> value);
    partial void OnIntegrationSettingTypeSourceObjectIdChanged();
    partial void OnSettingSourceObjectIdChanging(string value);
    partial void OnSettingSourceObjectIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public IntegrationSetting()
		{
			this._IntegrationSettingTypeSourceObject = default(EntityRef<IntegrationSettingTypeSourceObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSettingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IntegrationSettingId
		{
			get
			{
				return this._IntegrationSettingId;
			}
			set
			{
				if ((this._IntegrationSettingId != value))
				{
					this.OnIntegrationSettingIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSettingId = value;
					this.SendPropertyChanged("IntegrationSettingId");
					this.OnIntegrationSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationSettingTypeSourceObjectId", DbType="Int")]
		public System.Nullable<int> IntegrationSettingTypeSourceObjectId
		{
			get
			{
				return this._IntegrationSettingTypeSourceObjectId;
			}
			set
			{
				if ((this._IntegrationSettingTypeSourceObjectId != value))
				{
					if (this._IntegrationSettingTypeSourceObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationSettingTypeSourceObjectIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationSettingTypeSourceObjectId = value;
					this.SendPropertyChanged("IntegrationSettingTypeSourceObjectId");
					this.OnIntegrationSettingTypeSourceObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingSourceObjectId", DbType="VarChar(225)")]
		public string SettingSourceObjectId
		{
			get
			{
				return this._SettingSourceObjectId;
			}
			set
			{
				if ((this._SettingSourceObjectId != value))
				{
					this.OnSettingSourceObjectIdChanging(value);
					this.SendPropertyChanging();
					this._SettingSourceObjectId = value;
					this.SendPropertyChanged("SettingSourceObjectId");
					this.OnSettingSourceObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationSettingTypeSourceObject_IntegrationSetting", Storage="_IntegrationSettingTypeSourceObject", ThisKey="IntegrationSettingTypeSourceObjectId", OtherKey="IntegrationSettingTypeSourceObjectId", IsForeignKey=true)]
		public IntegrationSettingTypeSourceObject IntegrationSettingTypeSourceObject
		{
			get
			{
				return this._IntegrationSettingTypeSourceObject.Entity;
			}
			set
			{
				IntegrationSettingTypeSourceObject previousValue = this._IntegrationSettingTypeSourceObject.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationSettingTypeSourceObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationSettingTypeSourceObject.Entity = null;
						previousValue.IntegrationSettings.Remove(this);
					}
					this._IntegrationSettingTypeSourceObject.Entity = value;
					if ((value != null))
					{
						value.IntegrationSettings.Add(this);
						this._IntegrationSettingTypeSourceObjectId = value.IntegrationSettingTypeSourceObjectId;
					}
					else
					{
						this._IntegrationSettingTypeSourceObjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IntegrationSettingTypeSourceObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogData")]
	public partial class LogData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _DatabaseTime;
		
		private System.Nullable<System.DateTime> _EventTime;
		
		private System.Nullable<long> _EventTimeStamp;
		
		private string _EventType;
		
		private string _Source;
		
		private System.Nullable<int> _EventId;
		
		private string _MachineName;
		
		private string _AppDomain;
		
		private string _ProcessName;
		
		private System.Nullable<int> _ProcessId;
		
		private string _ThreadId;
		
		private string _Message;
		
		private string _CorrelationId;
		
		private string _RelatedActivityId;
		
		private string _AdditionalInfo;
		
		private System.Nullable<int> _UserAccountId;
		
		private System.Nullable<System.Guid> _LoanId;
		
		private int _EventCount;
		
		private System.Nullable<System.Guid> _TrackingId;
		
		private string _ReferenceId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDatabaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDatabaseTimeChanged();
    partial void OnEventTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEventTimeChanged();
    partial void OnEventTimeStampChanging(System.Nullable<long> value);
    partial void OnEventTimeStampChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnEventIdChanging(System.Nullable<int> value);
    partial void OnEventIdChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnAppDomainChanging(string value);
    partial void OnAppDomainChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessIdChanging(System.Nullable<int> value);
    partial void OnProcessIdChanged();
    partial void OnThreadIdChanging(string value);
    partial void OnThreadIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCorrelationIdChanging(string value);
    partial void OnCorrelationIdChanged();
    partial void OnRelatedActivityIdChanging(string value);
    partial void OnRelatedActivityIdChanged();
    partial void OnAdditionalInfoChanging(string value);
    partial void OnAdditionalInfoChanged();
    partial void OnUserAccountIdChanging(System.Nullable<int> value);
    partial void OnUserAccountIdChanged();
    partial void OnLoanIdChanging(System.Nullable<System.Guid> value);
    partial void OnLoanIdChanged();
    partial void OnEventCountChanging(int value);
    partial void OnEventCountChanged();
    partial void OnTrackingIdChanging(System.Nullable<System.Guid> value);
    partial void OnTrackingIdChanged();
    partial void OnReferenceIdChanging(string value);
    partial void OnReferenceIdChanged();
    #endregion
		
		public LogData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatabaseTime
		{
			get
			{
				return this._DatabaseTime;
			}
			set
			{
				if ((this._DatabaseTime != value))
				{
					this.OnDatabaseTimeChanging(value);
					this.SendPropertyChanging();
					this._DatabaseTime = value;
					this.SendPropertyChanged("DatabaseTime");
					this.OnDatabaseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeStamp", DbType="BigInt")]
		public System.Nullable<long> EventTimeStamp
		{
			get
			{
				return this._EventTimeStamp;
			}
			set
			{
				if ((this._EventTimeStamp != value))
				{
					this.OnEventTimeStampChanging(value);
					this.SendPropertyChanging();
					this._EventTimeStamp = value;
					this.SendPropertyChanged("EventTimeStamp");
					this.OnEventTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="VarChar(50)")]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(100)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int")]
		public System.Nullable<int> EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="VarChar(50)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppDomain", DbType="VarChar(50)")]
		public string AppDomain
		{
			get
			{
				return this._AppDomain;
			}
			set
			{
				if ((this._AppDomain != value))
				{
					this.OnAppDomainChanging(value);
					this.SendPropertyChanging();
					this._AppDomain = value;
					this.SendPropertyChanged("AppDomain");
					this.OnAppDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessName", DbType="VarChar(500)")]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="Int")]
		public System.Nullable<int> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadId", DbType="VarChar(50)")]
		public string ThreadId
		{
			get
			{
				return this._ThreadId;
			}
			set
			{
				if ((this._ThreadId != value))
				{
					this.OnThreadIdChanging(value);
					this.SendPropertyChanging();
					this._ThreadId = value;
					this.SendPropertyChanged("ThreadId");
					this.OnThreadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrelationId", DbType="VarChar(500)")]
		public string CorrelationId
		{
			get
			{
				return this._CorrelationId;
			}
			set
			{
				if ((this._CorrelationId != value))
				{
					this.OnCorrelationIdChanging(value);
					this.SendPropertyChanging();
					this._CorrelationId = value;
					this.SendPropertyChanged("CorrelationId");
					this.OnCorrelationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedActivityId", DbType="VarChar(500)")]
		public string RelatedActivityId
		{
			get
			{
				return this._RelatedActivityId;
			}
			set
			{
				if ((this._RelatedActivityId != value))
				{
					this.OnRelatedActivityIdChanging(value);
					this.SendPropertyChanging();
					this._RelatedActivityId = value;
					this.SendPropertyChanged("RelatedActivityId");
					this.OnRelatedActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this.OnAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInfo = value;
					this.SendPropertyChanged("AdditionalInfo");
					this.OnAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", DbType="Int")]
		public System.Nullable<int> UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCount", DbType="Int NOT NULL")]
		public int EventCount
		{
			get
			{
				return this._EventCount;
			}
			set
			{
				if ((this._EventCount != value))
				{
					this.OnEventCountChanging(value);
					this.SendPropertyChanging();
					this._EventCount = value;
					this.SendPropertyChanged("EventCount");
					this.OnEventCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TrackingId
		{
			get
			{
				return this._TrackingId;
			}
			set
			{
				if ((this._TrackingId != value))
				{
					this.OnTrackingIdChanging(value);
					this.SendPropertyChanging();
					this._TrackingId = value;
					this.SendPropertyChanged("TrackingId");
					this.OnTrackingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceId", DbType="VarChar(500)")]
		public string ReferenceId
		{
			get
			{
				return this._ReferenceId;
			}
			set
			{
				if ((this._ReferenceId != value))
				{
					this.OnReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ReferenceId = value;
					this.SendPropertyChanged("ReferenceId");
					this.OnReferenceIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loan")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LoanId;
		
		private string _ProgramName;
		
		private string _ProductTypeName;
		
		private System.Nullable<double> _Rate;
		
		private System.Nullable<double> _Apr;
		
		private System.Nullable<bool> _Prepay;
		
		private System.Nullable<double> _DiscountPoints;
		
		private System.Nullable<double> _MonthlyPayment;
		
		private System.Nullable<double> _TotalCost;
		
		private System.Nullable<double> _RecoupTime;
		
		private System.Nullable<double> _MonthlySavings;
		
		private System.Nullable<System.Guid> _OrderID;
		
		private System.DateTime _TimeStamp;
		
		private System.Nullable<double> _MortgageAmount;
		
		private int _Status;
		
		private System.DateTime _OpenDate;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private string _TaxForms;
		
		private int _LoanType;
		
		private int _UserAccountID;
		
		private System.Nullable<System.DateTime> _LockDate;
		
		private System.Nullable<bool> _AcceptedGFEandDisclosures;
		
		private System.Nullable<System.DateTime> _AcceptedGFEandDisclosuresTime;
		
		private System.Nullable<int> _NumberOfMonths;
		
		private System.Nullable<int> _AmortizationType;
		
		private System.Nullable<int> _MortgageType;
		
		private string _OptimalBlueIdentifier;
		
		private System.Nullable<int> _LoanTerm;
		
		private System.Nullable<double> _OriginalPrice;
		
		private System.Nullable<System.DateTime> _CreditAuthorizationDate;
		
		private int _LenderCaseNumber;
		
		private System.Nullable<int> _LockStatus;
		
		private System.Nullable<int> _FixedRateTerm;
		
		private string _LockText;
		
		private string _LoanNumber;
		
		private string _ConciergeFullName;
		
		private System.Nullable<int> _ConciergeId;
		
		private System.Nullable<int> _LockDays;
		
		private System.Nullable<bool> _eDocumentsAccepted;
		
		private System.Nullable<System.DateTime> _eDocumentsAcceptanceDate;
		
		private System.Xml.Linq.XElement _PricingQueryXml;
		
		private System.Nullable<bool> _IncludeTaxesAndInsurances;
		
		private System.Nullable<bool> _HaveRealEstateAgent;
		
		private System.Data.Linq.Binary _BarCode;
		
		private System.Nullable<System.DateTime> _RepricingDate;
		
		private System.Nullable<double> _TotalPriceAdjustment;
		
		private System.Nullable<double> _RateAdjustmentSubsequentCapPercent;
		
		private System.Nullable<double> _RateAdjustmentFirstChangeCapRate;
		
		private System.Nullable<double> _RateAdjustmentLifetimeCapPercent;
		
		private string _IndexType;
		
		private System.Nullable<double> _Margin;
		
		private System.Nullable<double> _FloodFee;
		
		private System.Nullable<double> _MIP;
		
		private System.Nullable<int> _DownPaymentTypeCode;
		
		private string _TitleInName;
		
		private string _TitleInNameValue;
		
		private System.Nullable<int> _MannerTitleHeld;
		
		private string _FullVesting;
		
		private string _EstateHeldIn;
		
		private System.Nullable<int> _PaymentFrequency;
		
		private System.Nullable<double> _IndexValue;
		
		private System.Nullable<int> _AdjustmentPeriod;
		
		private System.Nullable<double> _FloorRate;
		
		private System.Nullable<int> _FirstPaymentAdjustmentMonths;
		
		private System.Nullable<System.DateTime> _LockRequestDate;
		
		private System.Nullable<System.DateTime> _ClosingDate;
		
		private System.Nullable<System.DateTime> _FinalDisbursementDate;
		
		private System.Nullable<System.DateTime> _SigningDate;
		
		private System.Nullable<int> _RefinancePurpose;
		
		private System.Nullable<bool> _EnableDigitalDocsCall;
		
		private string _ConciergeCurrentActivityName;
		
		private System.Nullable<int> _LosFolderId;
		
		private System.Nullable<System.DateTime> _LoanApplicationDate;
		
		private string _AgencyCaseNumber;
		
		private System.Nullable<bool> _IsNoCost;
		
		private System.Nullable<double> _AdjustedPoints;
		
		private System.Nullable<double> _CashOutAmount;
		
		private string _ConciergeCurrentActivityStatus;
		
		private System.Nullable<bool> _ReDisclosureNeeded;
		
		private System.Nullable<decimal> _DTI;
		
		private System.Nullable<decimal> _HousingRatio;
		
		private System.Nullable<int> _InvestorType;
		
		private System.Nullable<int> _DisclosuresModel;
		
		private System.Xml.Linq.XElement _OriginalPricingQuery;
		
		private System.Nullable<int> _CreatedByImpersonatedConciergeId;
		
		private System.Nullable<bool> _SmartCreditEnabled;
		
		private string _LoaFullName;
		
		private System.Nullable<int> _LoaID;
		
		private System.Nullable<decimal> _CostAmountIncludedInLoanAmount;
		
		private System.Nullable<int> _IncludeCostOption;
		
		private System.Nullable<System.DateTime> _DateFHACaseNoAssigned;
		
		private bool _NeedToReprice;
		
		private bool _REOAdded;
		
		private bool _ManuallyEnteredCloseDate;
		
		private System.Nullable<double> _InitialApr;
		
		private System.Nullable<double> _InitialPrice;
		
		private System.Nullable<double> _InitialAdjustedPoints;
		
		private System.Nullable<bool> _IsCopied;
		
		private System.Nullable<int> _PriceChanged;
		
		private System.Nullable<double> _Variance;
		
		private System.Nullable<System.DateTime> _GFESettlementChargesDate;
		
		private System.Nullable<bool> _IsFromAllInvestorView;
		
		private string _OBUserName;
		
		private System.Nullable<System.DateTime> _ApplicationDate;
		
		private System.Nullable<int> _HarpLoanType;
		
		private int _Aus;
		
		private System.Nullable<bool> _AppAndLock;
		
		private System.Nullable<double> _PricingDTI;
		
		private System.Nullable<bool> _ImportToFNMInProgress;
		
		private int _HomeBuying;
		
		private System.Nullable<bool> _eSigningVendorIntegrationEnabled;
		
		private System.Nullable<System.DateTime> _ApplicationCompletedDate;
		
		private int _PreApprovalStatus;
		
		private System.Nullable<int> _CallCenterId;
		
		private int _LoanOriginatorSource;
		
		private string _LeadSourceId;
		
		private System.Nullable<System.DateTime> _LeadCreatedOn;
		
		private System.Nullable<bool> _IsHarp;
		
		private System.Nullable<System.Guid> _BranchId;
		
		private string _SmartGFEId;
		
		private bool _Conforming;
		
		private string _InvestorName;
		
		private System.Nullable<bool> _LoanWithoutPricing;
		
		private System.Nullable<int> _DivisionId;
		
		private System.Nullable<int> _ChannelId;
		
		private System.Nullable<System.Guid> _CompanyId;
		
		private string _HearAboutUs;
		
		private string _SmartGFETempId;
		
		private int _OriginationSystem;
		
		private bool _IsAppraisalLoan;
		
		private System.Nullable<bool> _SmartGFEEnabled;
		
		private string _PartnerLeadSourceId;
		
		private System.Nullable<System.DateTime> _LockExpireDate;
		
		private string _OfferingIdentified;
		
		private System.Nullable<System.DateTime> _PreApprovalRequestDate;
		
		private System.Nullable<bool> _IsBalloonPayment;
		
		private System.Nullable<bool> _IsGFEAlertSent;
		
		private System.Nullable<System.Guid> _ParentLoanId;
		
		private string _RUCode;
		
		private System.Nullable<double> _DisclosedAPR;
		
		private System.Nullable<double> _QualifyingRate;
		
		private System.Nullable<double> _QualifyingHousing;
		
		private System.Nullable<double> _QualifyingDTI;
		
		private System.Nullable<int> _FICOScoreForPricing;
		
		private System.Nullable<bool> _IsLoanImported;
		
		private System.Nullable<int> _LiquidAssetReserves;
		
		private System.Nullable<int> _MortgageInsuranceType;
		
		private System.Nullable<int> _DecisionStatus;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<System.Guid> _VAInformationId;
		
		private string _NameOfPartner;
		
		private System.Nullable<int> _InvestorMatrixId;
		
		private System.Nullable<int> _SellSideInformationId;
		
		private System.Nullable<decimal> _InvestorPrice;
		
		private System.Nullable<decimal> _EnterprisePrice;
		
		private System.Nullable<decimal> _LoanOfficerPrice;
		
		private System.Nullable<decimal> _FinalLoanOfficerPrice;
		
		private System.Nullable<decimal> _InvestorPurchasePrice;
		
		private System.Nullable<decimal> _FinalPurchasePrice;
		
		private System.Nullable<double> _AdjustedRate;
		
		private System.Nullable<int> _CurrentMilestone;
		
		private System.Nullable<int> _DisclosureStatus;
		
		private System.Nullable<int> _LeadStatus;
		
		private int _DocDelivery;
		
		private string _EncompassBorrowerPairId;
		
		private int _SnoozeOrder;
		
		private System.Nullable<bool> _IsMilestoneStatusManual;
		
		private System.Nullable<decimal> _TotalAggregateAdjustment;
		
		private System.Nullable<bool> _NtbRequired;
		
		private System.Nullable<bool> _NegativeAmortization;
		
		private System.Nullable<bool> _PrePaymentPenalty;
		
		private System.Nullable<decimal> _PrePaymentAmount;
		
		private System.Nullable<int> _BonaFidePersonalReasonId;
		
		private System.Nullable<int> _ComplianceCheckStatus;
		
		private System.Nullable<int> _SalesManagerId;
		
		private System.Nullable<int> _TeamLeaderId;
		
		private System.Nullable<int> _GovermentEligibility;
		
		private string _CreditAuthorizationAcceptedBy;
		
		private System.Nullable<decimal> _USDAModerateIncomeLimit;
		
		private System.Nullable<int> _IncomeVerificationType;
		
		private System.Nullable<int> _CurrentWorkflowState;
		
		private System.Nullable<int> _NonTraditionalCreditType;
		
		private System.Nullable<int> _PurposeOfRefinance;
		
		private System.Nullable<bool> _IsFirstTimeHomebuyer;
		
		private string _LockCode;
		
		private string _RateCard;
		
		private System.Nullable<decimal> _CreditReportFee;
		
		private string _PartnerFirstName;
		
		private string _PartnerLastName;
		
		private System.Nullable<int> _NoFinancedProperties;
		
		private System.Nullable<bool> _ServicingIndicator;
		
		private System.Nullable<int> _ProductClassification;
		
		private System.Nullable<int> _LOSExportStatus;
		
		private System.Nullable<System.DateTime> _LOSExportStatusExpire;
		
		private System.Nullable<bool> _FeeCalc;
		
		private System.Nullable<bool> _IsExportedToEncompass;
		
		private System.Nullable<bool> _InterestOnly;
		
		private System.Nullable<int> _InterestOnlyTermMonths;
		
		private System.Nullable<bool> _IsRemoved;
		
		private System.Nullable<decimal> _ExcludeMIforLTVUnder;
		
		private System.Nullable<bool> _IsPricingFicoOverridden;
		
		private int _LoanChannelType;
		
		private System.Nullable<int> _LoanBalanceType;
		
		private System.Nullable<bool> _MustDiscloseInIMP;
		
		private string _LenderLoanNumber;
		
		private string _CommitmentNumber;
		
		private System.Nullable<System.DateTime> _AutoDiscloseTime;
		
		private System.Nullable<bool> _IsTitleChangedDueToRefi;
		
		private string _TitleRefiChanges;
		
		private int _WorkflowId;
		
		private System.Nullable<bool> _AssetVerification;
		
		private string _ProductIdentifier;
		
		private string _ProductCode;
		
		private System.Nullable<int> _PurposeOfRefinanceLoan;
		
		private System.Nullable<int> _ExternalLOSUpdateStatus;
		
		private System.Nullable<bool> _VAUpdatePriceFeesEnabled;
		
		private string _MIRateQuoteId;
		
		private System.Nullable<decimal> _InvestorRate;
		
		private System.Nullable<decimal> _EnterpriseRate;
		
		private System.Nullable<decimal> _LoanOfficerRate;
		
		private System.Nullable<decimal> _FinalLoanOfficerRate;
		
		private System.Nullable<decimal> _InvestorMargin;
		
		private System.Nullable<decimal> _LoanOfficerMargin;
		
		private System.Nullable<decimal> _FinalLoanOfficerMargin;
		
		private System.Nullable<decimal> _EnterpriseMargin;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _AreAllBorrowersOnLoanBorrowerEligibility;
		
		private System.Nullable<int> _LatePyamentOnMortgageNonCreditQualPaymentEligibility;
		
		private System.Nullable<int> _LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility;
		
		private System.Nullable<int> _LatePyamentOnMortgageCreditQualPaymentEligibility;
		
		private System.Nullable<int> _LatePyamentOnSubjectPropertyCreditQualPaymentEligibility;
		
		private System.Nullable<int> _WillNewLoanHaveSameBorrowers;
		
		private System.Nullable<int> _DefaultAUS;
		
		private System.Nullable<int> _StreamlinePaymentEligibility1;
		
		private System.Nullable<bool> _StreamlinePaymentEligibility2;
		
		private System.Nullable<bool> _Has2ndMortgage;
		
		private System.Nullable<bool> _IsLoanARM;
		
		private System.Nullable<int> _ARMLoanMonthsBeforeNextPaymentType;
		
		private EntitySet<AuditLog> _AuditLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIdChanging(System.Guid value);
    partial void OnLoanIdChanged();
    partial void OnProgramNameChanging(string value);
    partial void OnProgramNameChanged();
    partial void OnProductTypeNameChanging(string value);
    partial void OnProductTypeNameChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    partial void OnAprChanging(System.Nullable<double> value);
    partial void OnAprChanged();
    partial void OnPrepayChanging(System.Nullable<bool> value);
    partial void OnPrepayChanged();
    partial void OnDiscountPointsChanging(System.Nullable<double> value);
    partial void OnDiscountPointsChanged();
    partial void OnMonthlyPaymentChanging(System.Nullable<double> value);
    partial void OnMonthlyPaymentChanged();
    partial void OnTotalCostChanging(System.Nullable<double> value);
    partial void OnTotalCostChanged();
    partial void OnRecoupTimeChanging(System.Nullable<double> value);
    partial void OnRecoupTimeChanged();
    partial void OnMonthlySavingsChanging(System.Nullable<double> value);
    partial void OnMonthlySavingsChanged();
    partial void OnOrderIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrderIDChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnMortgageAmountChanging(System.Nullable<double> value);
    partial void OnMortgageAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnOpenDateChanging(System.DateTime value);
    partial void OnOpenDateChanged();
    partial void OnCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateChanged();
    partial void OnTaxFormsChanging(string value);
    partial void OnTaxFormsChanged();
    partial void OnLoanTypeChanging(int value);
    partial void OnLoanTypeChanged();
    partial void OnUserAccountIDChanging(int value);
    partial void OnUserAccountIDChanged();
    partial void OnLockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockDateChanged();
    partial void OnAcceptedGFEandDisclosuresChanging(System.Nullable<bool> value);
    partial void OnAcceptedGFEandDisclosuresChanged();
    partial void OnAcceptedGFEandDisclosuresTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedGFEandDisclosuresTimeChanged();
    partial void OnNumberOfMonthsChanging(System.Nullable<int> value);
    partial void OnNumberOfMonthsChanged();
    partial void OnAmortizationTypeChanging(System.Nullable<int> value);
    partial void OnAmortizationTypeChanged();
    partial void OnMortgageTypeChanging(System.Nullable<int> value);
    partial void OnMortgageTypeChanged();
    partial void OnOptimalBlueIdentifierChanging(string value);
    partial void OnOptimalBlueIdentifierChanged();
    partial void OnLoanTermChanging(System.Nullable<int> value);
    partial void OnLoanTermChanged();
    partial void OnOriginalPriceChanging(System.Nullable<double> value);
    partial void OnOriginalPriceChanged();
    partial void OnCreditAuthorizationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreditAuthorizationDateChanged();
    partial void OnLenderCaseNumberChanging(int value);
    partial void OnLenderCaseNumberChanged();
    partial void OnLockStatusChanging(System.Nullable<int> value);
    partial void OnLockStatusChanged();
    partial void OnFixedRateTermChanging(System.Nullable<int> value);
    partial void OnFixedRateTermChanged();
    partial void OnLockTextChanging(string value);
    partial void OnLockTextChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnConciergeFullNameChanging(string value);
    partial void OnConciergeFullNameChanged();
    partial void OnConciergeIdChanging(System.Nullable<int> value);
    partial void OnConciergeIdChanged();
    partial void OnLockDaysChanging(System.Nullable<int> value);
    partial void OnLockDaysChanged();
    partial void OneDocumentsAcceptedChanging(System.Nullable<bool> value);
    partial void OneDocumentsAcceptedChanged();
    partial void OneDocumentsAcceptanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OneDocumentsAcceptanceDateChanged();
    partial void OnPricingQueryXmlChanging(System.Xml.Linq.XElement value);
    partial void OnPricingQueryXmlChanged();
    partial void OnIncludeTaxesAndInsurancesChanging(System.Nullable<bool> value);
    partial void OnIncludeTaxesAndInsurancesChanged();
    partial void OnHaveRealEstateAgentChanging(System.Nullable<bool> value);
    partial void OnHaveRealEstateAgentChanged();
    partial void OnBarCodeChanging(System.Data.Linq.Binary value);
    partial void OnBarCodeChanged();
    partial void OnRepricingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepricingDateChanged();
    partial void OnTotalPriceAdjustmentChanging(System.Nullable<double> value);
    partial void OnTotalPriceAdjustmentChanged();
    partial void OnRateAdjustmentSubsequentCapPercentChanging(System.Nullable<double> value);
    partial void OnRateAdjustmentSubsequentCapPercentChanged();
    partial void OnRateAdjustmentFirstChangeCapRateChanging(System.Nullable<double> value);
    partial void OnRateAdjustmentFirstChangeCapRateChanged();
    partial void OnRateAdjustmentLifetimeCapPercentChanging(System.Nullable<double> value);
    partial void OnRateAdjustmentLifetimeCapPercentChanged();
    partial void OnIndexTypeChanging(string value);
    partial void OnIndexTypeChanged();
    partial void OnMarginChanging(System.Nullable<double> value);
    partial void OnMarginChanged();
    partial void OnFloodFeeChanging(System.Nullable<double> value);
    partial void OnFloodFeeChanged();
    partial void OnMIPChanging(System.Nullable<double> value);
    partial void OnMIPChanged();
    partial void OnDownPaymentTypeCodeChanging(System.Nullable<int> value);
    partial void OnDownPaymentTypeCodeChanged();
    partial void OnTitleInNameChanging(string value);
    partial void OnTitleInNameChanged();
    partial void OnTitleInNameValueChanging(string value);
    partial void OnTitleInNameValueChanged();
    partial void OnMannerTitleHeldChanging(System.Nullable<int> value);
    partial void OnMannerTitleHeldChanged();
    partial void OnFullVestingChanging(string value);
    partial void OnFullVestingChanged();
    partial void OnEstateHeldInChanging(string value);
    partial void OnEstateHeldInChanged();
    partial void OnPaymentFrequencyChanging(System.Nullable<int> value);
    partial void OnPaymentFrequencyChanged();
    partial void OnIndexValueChanging(System.Nullable<double> value);
    partial void OnIndexValueChanged();
    partial void OnAdjustmentPeriodChanging(System.Nullable<int> value);
    partial void OnAdjustmentPeriodChanged();
    partial void OnFloorRateChanging(System.Nullable<double> value);
    partial void OnFloorRateChanged();
    partial void OnFirstPaymentAdjustmentMonthsChanging(System.Nullable<int> value);
    partial void OnFirstPaymentAdjustmentMonthsChanged();
    partial void OnLockRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockRequestDateChanged();
    partial void OnClosingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingDateChanged();
    partial void OnFinalDisbursementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDisbursementDateChanged();
    partial void OnSigningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSigningDateChanged();
    partial void OnRefinancePurposeChanging(System.Nullable<int> value);
    partial void OnRefinancePurposeChanged();
    partial void OnEnableDigitalDocsCallChanging(System.Nullable<bool> value);
    partial void OnEnableDigitalDocsCallChanged();
    partial void OnConciergeCurrentActivityNameChanging(string value);
    partial void OnConciergeCurrentActivityNameChanged();
    partial void OnLosFolderIdChanging(System.Nullable<int> value);
    partial void OnLosFolderIdChanged();
    partial void OnLoanApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoanApplicationDateChanged();
    partial void OnAgencyCaseNumberChanging(string value);
    partial void OnAgencyCaseNumberChanged();
    partial void OnIsNoCostChanging(System.Nullable<bool> value);
    partial void OnIsNoCostChanged();
    partial void OnAdjustedPointsChanging(System.Nullable<double> value);
    partial void OnAdjustedPointsChanged();
    partial void OnCashOutAmountChanging(System.Nullable<double> value);
    partial void OnCashOutAmountChanged();
    partial void OnConciergeCurrentActivityStatusChanging(string value);
    partial void OnConciergeCurrentActivityStatusChanged();
    partial void OnReDisclosureNeededChanging(System.Nullable<bool> value);
    partial void OnReDisclosureNeededChanged();
    partial void OnDTIChanging(System.Nullable<decimal> value);
    partial void OnDTIChanged();
    partial void OnHousingRatioChanging(System.Nullable<decimal> value);
    partial void OnHousingRatioChanged();
    partial void OnInvestorTypeChanging(System.Nullable<int> value);
    partial void OnInvestorTypeChanged();
    partial void OnDisclosuresModelChanging(System.Nullable<int> value);
    partial void OnDisclosuresModelChanged();
    partial void OnOriginalPricingQueryChanging(System.Xml.Linq.XElement value);
    partial void OnOriginalPricingQueryChanged();
    partial void OnCreatedByImpersonatedConciergeIdChanging(System.Nullable<int> value);
    partial void OnCreatedByImpersonatedConciergeIdChanged();
    partial void OnSmartCreditEnabledChanging(System.Nullable<bool> value);
    partial void OnSmartCreditEnabledChanged();
    partial void OnLoaFullNameChanging(string value);
    partial void OnLoaFullNameChanged();
    partial void OnLoaIDChanging(System.Nullable<int> value);
    partial void OnLoaIDChanged();
    partial void OnCostAmountIncludedInLoanAmountChanging(System.Nullable<decimal> value);
    partial void OnCostAmountIncludedInLoanAmountChanged();
    partial void OnIncludeCostOptionChanging(System.Nullable<int> value);
    partial void OnIncludeCostOptionChanged();
    partial void OnDateFHACaseNoAssignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFHACaseNoAssignedChanged();
    partial void OnNeedToRepriceChanging(bool value);
    partial void OnNeedToRepriceChanged();
    partial void OnREOAddedChanging(bool value);
    partial void OnREOAddedChanged();
    partial void OnManuallyEnteredCloseDateChanging(bool value);
    partial void OnManuallyEnteredCloseDateChanged();
    partial void OnInitialAprChanging(System.Nullable<double> value);
    partial void OnInitialAprChanged();
    partial void OnInitialPriceChanging(System.Nullable<double> value);
    partial void OnInitialPriceChanged();
    partial void OnInitialAdjustedPointsChanging(System.Nullable<double> value);
    partial void OnInitialAdjustedPointsChanged();
    partial void OnIsCopiedChanging(System.Nullable<bool> value);
    partial void OnIsCopiedChanged();
    partial void OnPriceChangedChanging(System.Nullable<int> value);
    partial void OnPriceChangedChanged();
    partial void OnVarianceChanging(System.Nullable<double> value);
    partial void OnVarianceChanged();
    partial void OnGFESettlementChargesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGFESettlementChargesDateChanged();
    partial void OnIsFromAllInvestorViewChanging(System.Nullable<bool> value);
    partial void OnIsFromAllInvestorViewChanged();
    partial void OnOBUserNameChanging(string value);
    partial void OnOBUserNameChanged();
    partial void OnApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicationDateChanged();
    partial void OnHarpLoanTypeChanging(System.Nullable<int> value);
    partial void OnHarpLoanTypeChanged();
    partial void OnAusChanging(int value);
    partial void OnAusChanged();
    partial void OnAppAndLockChanging(System.Nullable<bool> value);
    partial void OnAppAndLockChanged();
    partial void OnPricingDTIChanging(System.Nullable<double> value);
    partial void OnPricingDTIChanged();
    partial void OnImportToFNMInProgressChanging(System.Nullable<bool> value);
    partial void OnImportToFNMInProgressChanged();
    partial void OnHomeBuyingChanging(int value);
    partial void OnHomeBuyingChanged();
    partial void OneSigningVendorIntegrationEnabledChanging(System.Nullable<bool> value);
    partial void OneSigningVendorIntegrationEnabledChanged();
    partial void OnApplicationCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicationCompletedDateChanged();
    partial void OnPreApprovalStatusChanging(int value);
    partial void OnPreApprovalStatusChanged();
    partial void OnCallCenterIdChanging(System.Nullable<int> value);
    partial void OnCallCenterIdChanged();
    partial void OnLoanOriginatorSourceChanging(int value);
    partial void OnLoanOriginatorSourceChanged();
    partial void OnLeadSourceIdChanging(string value);
    partial void OnLeadSourceIdChanged();
    partial void OnLeadCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLeadCreatedOnChanged();
    partial void OnIsHarpChanging(System.Nullable<bool> value);
    partial void OnIsHarpChanged();
    partial void OnBranchIdChanging(System.Nullable<System.Guid> value);
    partial void OnBranchIdChanged();
    partial void OnSmartGFEIdChanging(string value);
    partial void OnSmartGFEIdChanged();
    partial void OnConformingChanging(bool value);
    partial void OnConformingChanged();
    partial void OnInvestorNameChanging(string value);
    partial void OnInvestorNameChanged();
    partial void OnLoanWithoutPricingChanging(System.Nullable<bool> value);
    partial void OnLoanWithoutPricingChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnChannelIdChanging(System.Nullable<int> value);
    partial void OnChannelIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCompanyIdChanged();
    partial void OnHearAboutUsChanging(string value);
    partial void OnHearAboutUsChanged();
    partial void OnSmartGFETempIdChanging(string value);
    partial void OnSmartGFETempIdChanged();
    partial void OnOriginationSystemChanging(int value);
    partial void OnOriginationSystemChanged();
    partial void OnIsAppraisalLoanChanging(bool value);
    partial void OnIsAppraisalLoanChanged();
    partial void OnSmartGFEEnabledChanging(System.Nullable<bool> value);
    partial void OnSmartGFEEnabledChanged();
    partial void OnPartnerLeadSourceIdChanging(string value);
    partial void OnPartnerLeadSourceIdChanged();
    partial void OnLockExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockExpireDateChanged();
    partial void OnOfferingIdentifiedChanging(string value);
    partial void OnOfferingIdentifiedChanged();
    partial void OnPreApprovalRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPreApprovalRequestDateChanged();
    partial void OnIsBalloonPaymentChanging(System.Nullable<bool> value);
    partial void OnIsBalloonPaymentChanged();
    partial void OnIsGFEAlertSentChanging(System.Nullable<bool> value);
    partial void OnIsGFEAlertSentChanged();
    partial void OnParentLoanIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentLoanIdChanged();
    partial void OnRUCodeChanging(string value);
    partial void OnRUCodeChanged();
    partial void OnDisclosedAPRChanging(System.Nullable<double> value);
    partial void OnDisclosedAPRChanged();
    partial void OnQualifyingRateChanging(System.Nullable<double> value);
    partial void OnQualifyingRateChanged();
    partial void OnQualifyingHousingChanging(System.Nullable<double> value);
    partial void OnQualifyingHousingChanged();
    partial void OnQualifyingDTIChanging(System.Nullable<double> value);
    partial void OnQualifyingDTIChanged();
    partial void OnFICOScoreForPricingChanging(System.Nullable<int> value);
    partial void OnFICOScoreForPricingChanged();
    partial void OnIsLoanImportedChanging(System.Nullable<bool> value);
    partial void OnIsLoanImportedChanged();
    partial void OnLiquidAssetReservesChanging(System.Nullable<int> value);
    partial void OnLiquidAssetReservesChanged();
    partial void OnMortgageInsuranceTypeChanging(System.Nullable<int> value);
    partial void OnMortgageInsuranceTypeChanged();
    partial void OnDecisionStatusChanging(System.Nullable<int> value);
    partial void OnDecisionStatusChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnVAInformationIdChanging(System.Nullable<System.Guid> value);
    partial void OnVAInformationIdChanged();
    partial void OnNameOfPartnerChanging(string value);
    partial void OnNameOfPartnerChanged();
    partial void OnInvestorMatrixIdChanging(System.Nullable<int> value);
    partial void OnInvestorMatrixIdChanged();
    partial void OnSellSideInformationIdChanging(System.Nullable<int> value);
    partial void OnSellSideInformationIdChanged();
    partial void OnInvestorPriceChanging(System.Nullable<decimal> value);
    partial void OnInvestorPriceChanged();
    partial void OnEnterprisePriceChanging(System.Nullable<decimal> value);
    partial void OnEnterprisePriceChanged();
    partial void OnLoanOfficerPriceChanging(System.Nullable<decimal> value);
    partial void OnLoanOfficerPriceChanged();
    partial void OnFinalLoanOfficerPriceChanging(System.Nullable<decimal> value);
    partial void OnFinalLoanOfficerPriceChanged();
    partial void OnInvestorPurchasePriceChanging(System.Nullable<decimal> value);
    partial void OnInvestorPurchasePriceChanged();
    partial void OnFinalPurchasePriceChanging(System.Nullable<decimal> value);
    partial void OnFinalPurchasePriceChanged();
    partial void OnAdjustedRateChanging(System.Nullable<double> value);
    partial void OnAdjustedRateChanged();
    partial void OnCurrentMilestoneChanging(System.Nullable<int> value);
    partial void OnCurrentMilestoneChanged();
    partial void OnDisclosureStatusChanging(System.Nullable<int> value);
    partial void OnDisclosureStatusChanged();
    partial void OnLeadStatusChanging(System.Nullable<int> value);
    partial void OnLeadStatusChanged();
    partial void OnDocDeliveryChanging(int value);
    partial void OnDocDeliveryChanged();
    partial void OnEncompassBorrowerPairIdChanging(string value);
    partial void OnEncompassBorrowerPairIdChanged();
    partial void OnSnoozeOrderChanging(int value);
    partial void OnSnoozeOrderChanged();
    partial void OnIsMilestoneStatusManualChanging(System.Nullable<bool> value);
    partial void OnIsMilestoneStatusManualChanged();
    partial void OnTotalAggregateAdjustmentChanging(System.Nullable<decimal> value);
    partial void OnTotalAggregateAdjustmentChanged();
    partial void OnNtbRequiredChanging(System.Nullable<bool> value);
    partial void OnNtbRequiredChanged();
    partial void OnNegativeAmortizationChanging(System.Nullable<bool> value);
    partial void OnNegativeAmortizationChanged();
    partial void OnPrePaymentPenaltyChanging(System.Nullable<bool> value);
    partial void OnPrePaymentPenaltyChanged();
    partial void OnPrePaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPrePaymentAmountChanged();
    partial void OnBonaFidePersonalReasonIdChanging(System.Nullable<int> value);
    partial void OnBonaFidePersonalReasonIdChanged();
    partial void OnComplianceCheckStatusChanging(System.Nullable<int> value);
    partial void OnComplianceCheckStatusChanged();
    partial void OnSalesManagerIdChanging(System.Nullable<int> value);
    partial void OnSalesManagerIdChanged();
    partial void OnTeamLeaderIdChanging(System.Nullable<int> value);
    partial void OnTeamLeaderIdChanged();
    partial void OnGovermentEligibilityChanging(System.Nullable<int> value);
    partial void OnGovermentEligibilityChanged();
    partial void OnCreditAuthorizationAcceptedByChanging(string value);
    partial void OnCreditAuthorizationAcceptedByChanged();
    partial void OnUSDAModerateIncomeLimitChanging(System.Nullable<decimal> value);
    partial void OnUSDAModerateIncomeLimitChanged();
    partial void OnIncomeVerificationTypeChanging(System.Nullable<int> value);
    partial void OnIncomeVerificationTypeChanged();
    partial void OnCurrentWorkflowStateChanging(System.Nullable<int> value);
    partial void OnCurrentWorkflowStateChanged();
    partial void OnNonTraditionalCreditTypeChanging(System.Nullable<int> value);
    partial void OnNonTraditionalCreditTypeChanged();
    partial void OnPurposeOfRefinanceChanging(System.Nullable<int> value);
    partial void OnPurposeOfRefinanceChanged();
    partial void OnIsFirstTimeHomebuyerChanging(System.Nullable<bool> value);
    partial void OnIsFirstTimeHomebuyerChanged();
    partial void OnLockCodeChanging(string value);
    partial void OnLockCodeChanged();
    partial void OnRateCardChanging(string value);
    partial void OnRateCardChanged();
    partial void OnCreditReportFeeChanging(System.Nullable<decimal> value);
    partial void OnCreditReportFeeChanged();
    partial void OnPartnerFirstNameChanging(string value);
    partial void OnPartnerFirstNameChanged();
    partial void OnPartnerLastNameChanging(string value);
    partial void OnPartnerLastNameChanged();
    partial void OnNoFinancedPropertiesChanging(System.Nullable<int> value);
    partial void OnNoFinancedPropertiesChanged();
    partial void OnServicingIndicatorChanging(System.Nullable<bool> value);
    partial void OnServicingIndicatorChanged();
    partial void OnProductClassificationChanging(System.Nullable<int> value);
    partial void OnProductClassificationChanged();
    partial void OnLOSExportStatusChanging(System.Nullable<int> value);
    partial void OnLOSExportStatusChanged();
    partial void OnLOSExportStatusExpireChanging(System.Nullable<System.DateTime> value);
    partial void OnLOSExportStatusExpireChanged();
    partial void OnFeeCalcChanging(System.Nullable<bool> value);
    partial void OnFeeCalcChanged();
    partial void OnIsExportedToEncompassChanging(System.Nullable<bool> value);
    partial void OnIsExportedToEncompassChanged();
    partial void OnInterestOnlyChanging(System.Nullable<bool> value);
    partial void OnInterestOnlyChanged();
    partial void OnInterestOnlyTermMonthsChanging(System.Nullable<int> value);
    partial void OnInterestOnlyTermMonthsChanged();
    partial void OnIsRemovedChanging(System.Nullable<bool> value);
    partial void OnIsRemovedChanged();
    partial void OnExcludeMIforLTVUnderChanging(System.Nullable<decimal> value);
    partial void OnExcludeMIforLTVUnderChanged();
    partial void OnIsPricingFicoOverriddenChanging(System.Nullable<bool> value);
    partial void OnIsPricingFicoOverriddenChanged();
    partial void OnLoanChannelTypeChanging(int value);
    partial void OnLoanChannelTypeChanged();
    partial void OnLoanBalanceTypeChanging(System.Nullable<int> value);
    partial void OnLoanBalanceTypeChanged();
    partial void OnMustDiscloseInIMPChanging(System.Nullable<bool> value);
    partial void OnMustDiscloseInIMPChanged();
    partial void OnLenderLoanNumberChanging(string value);
    partial void OnLenderLoanNumberChanged();
    partial void OnCommitmentNumberChanging(string value);
    partial void OnCommitmentNumberChanged();
    partial void OnAutoDiscloseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDiscloseTimeChanged();
    partial void OnIsTitleChangedDueToRefiChanging(System.Nullable<bool> value);
    partial void OnIsTitleChangedDueToRefiChanged();
    partial void OnTitleRefiChangesChanging(string value);
    partial void OnTitleRefiChangesChanged();
    partial void OnWorkflowIdChanging(int value);
    partial void OnWorkflowIdChanged();
    partial void OnAssetVerificationChanging(System.Nullable<bool> value);
    partial void OnAssetVerificationChanged();
    partial void OnProductIdentifierChanging(string value);
    partial void OnProductIdentifierChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnPurposeOfRefinanceLoanChanging(System.Nullable<int> value);
    partial void OnPurposeOfRefinanceLoanChanged();
    partial void OnExternalLOSUpdateStatusChanging(System.Nullable<int> value);
    partial void OnExternalLOSUpdateStatusChanged();
    partial void OnVAUpdatePriceFeesEnabledChanging(System.Nullable<bool> value);
    partial void OnVAUpdatePriceFeesEnabledChanged();
    partial void OnMIRateQuoteIdChanging(string value);
    partial void OnMIRateQuoteIdChanged();
    partial void OnInvestorRateChanging(System.Nullable<decimal> value);
    partial void OnInvestorRateChanged();
    partial void OnEnterpriseRateChanging(System.Nullable<decimal> value);
    partial void OnEnterpriseRateChanged();
    partial void OnLoanOfficerRateChanging(System.Nullable<decimal> value);
    partial void OnLoanOfficerRateChanged();
    partial void OnFinalLoanOfficerRateChanging(System.Nullable<decimal> value);
    partial void OnFinalLoanOfficerRateChanged();
    partial void OnInvestorMarginChanging(System.Nullable<decimal> value);
    partial void OnInvestorMarginChanged();
    partial void OnLoanOfficerMarginChanging(System.Nullable<decimal> value);
    partial void OnLoanOfficerMarginChanged();
    partial void OnFinalLoanOfficerMarginChanging(System.Nullable<decimal> value);
    partial void OnFinalLoanOfficerMarginChanged();
    partial void OnEnterpriseMarginChanging(System.Nullable<decimal> value);
    partial void OnEnterpriseMarginChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAreAllBorrowersOnLoanBorrowerEligibilityChanging(System.Nullable<int> value);
    partial void OnAreAllBorrowersOnLoanBorrowerEligibilityChanged();
    partial void OnLatePyamentOnMortgageNonCreditQualPaymentEligibilityChanging(System.Nullable<int> value);
    partial void OnLatePyamentOnMortgageNonCreditQualPaymentEligibilityChanged();
    partial void OnLatePyamentOnSubjectPropertyNonCreditQualPaymentEligibilityChanging(System.Nullable<int> value);
    partial void OnLatePyamentOnSubjectPropertyNonCreditQualPaymentEligibilityChanged();
    partial void OnLatePyamentOnMortgageCreditQualPaymentEligibilityChanging(System.Nullable<int> value);
    partial void OnLatePyamentOnMortgageCreditQualPaymentEligibilityChanged();
    partial void OnLatePyamentOnSubjectPropertyCreditQualPaymentEligibilityChanging(System.Nullable<int> value);
    partial void OnLatePyamentOnSubjectPropertyCreditQualPaymentEligibilityChanged();
    partial void OnWillNewLoanHaveSameBorrowersChanging(System.Nullable<int> value);
    partial void OnWillNewLoanHaveSameBorrowersChanged();
    partial void OnDefaultAUSChanging(System.Nullable<int> value);
    partial void OnDefaultAUSChanged();
    partial void OnStreamlinePaymentEligibility1Changing(System.Nullable<int> value);
    partial void OnStreamlinePaymentEligibility1Changed();
    partial void OnStreamlinePaymentEligibility2Changing(System.Nullable<bool> value);
    partial void OnStreamlinePaymentEligibility2Changed();
    partial void OnHas2ndMortgageChanging(System.Nullable<bool> value);
    partial void OnHas2ndMortgageChanged();
    partial void OnIsLoanARMChanging(System.Nullable<bool> value);
    partial void OnIsLoanARMChanged();
    partial void OnARMLoanMonthsBeforeNextPaymentTypeChanging(System.Nullable<int> value);
    partial void OnARMLoanMonthsBeforeNextPaymentTypeChanged();
    #endregion
		
		public Loan()
		{
			this._AuditLogs = new EntitySet<AuditLog>(new Action<AuditLog>(this.attach_AuditLogs), new Action<AuditLog>(this.detach_AuditLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this.OnProgramNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramName = value;
					this.SendPropertyChanged("ProgramName");
					this.OnProgramNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeName", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string ProductTypeName
		{
			get
			{
				return this._ProductTypeName;
			}
			set
			{
				if ((this._ProductTypeName != value))
				{
					this.OnProductTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeName = value;
					this.SendPropertyChanged("ProductTypeName");
					this.OnProductTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apr", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> Apr
		{
			get
			{
				return this._Apr;
			}
			set
			{
				if ((this._Apr != value))
				{
					this.OnAprChanging(value);
					this.SendPropertyChanging();
					this._Apr = value;
					this.SendPropertyChanged("Apr");
					this.OnAprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prepay", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Prepay
		{
			get
			{
				return this._Prepay;
			}
			set
			{
				if ((this._Prepay != value))
				{
					this.OnPrepayChanging(value);
					this.SendPropertyChanging();
					this._Prepay = value;
					this.SendPropertyChanged("Prepay");
					this.OnPrepayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPoints", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DiscountPoints
		{
			get
			{
				return this._DiscountPoints;
			}
			set
			{
				if ((this._DiscountPoints != value))
				{
					this.OnDiscountPointsChanging(value);
					this.SendPropertyChanging();
					this._DiscountPoints = value;
					this.SendPropertyChanged("DiscountPoints");
					this.OnDiscountPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyPayment", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> MonthlyPayment
		{
			get
			{
				return this._MonthlyPayment;
			}
			set
			{
				if ((this._MonthlyPayment != value))
				{
					this.OnMonthlyPaymentChanging(value);
					this.SendPropertyChanging();
					this._MonthlyPayment = value;
					this.SendPropertyChanged("MonthlyPayment");
					this.OnMonthlyPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoupTime", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> RecoupTime
		{
			get
			{
				return this._RecoupTime;
			}
			set
			{
				if ((this._RecoupTime != value))
				{
					this.OnRecoupTimeChanging(value);
					this.SendPropertyChanging();
					this._RecoupTime = value;
					this.SendPropertyChanged("RecoupTime");
					this.OnRecoupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlySavings", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> MonthlySavings
		{
			get
			{
				return this._MonthlySavings;
			}
			set
			{
				if ((this._MonthlySavings != value))
				{
					this.OnMonthlySavingsChanging(value);
					this.SendPropertyChanging();
					this._MonthlySavings = value;
					this.SendPropertyChanged("MonthlySavings");
					this.OnMonthlySavingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageAmount", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> MortgageAmount
		{
			get
			{
				return this._MortgageAmount;
			}
			set
			{
				if ((this._MortgageAmount != value))
				{
					this.OnMortgageAmountChanging(value);
					this.SendPropertyChanging();
					this._MortgageAmount = value;
					this.SendPropertyChanged("MortgageAmount");
					this.OnMortgageAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime OpenDate
		{
			get
			{
				return this._OpenDate;
			}
			set
			{
				if ((this._OpenDate != value))
				{
					this.OnOpenDateChanging(value);
					this.SendPropertyChanging();
					this._OpenDate = value;
					this.SendPropertyChanged("OpenDate");
					this.OnOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxForms", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string TaxForms
		{
			get
			{
				return this._TaxForms;
			}
			set
			{
				if ((this._TaxForms != value))
				{
					this.OnTaxFormsChanging(value);
					this.SendPropertyChanging();
					this._TaxForms = value;
					this.SendPropertyChanged("TaxForms");
					this.OnTaxFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LoanType
		{
			get
			{
				return this._LoanType;
			}
			set
			{
				if ((this._LoanType != value))
				{
					this.OnLoanTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanType = value;
					this.SendPropertyChanged("LoanType");
					this.OnLoanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UserAccountID
		{
			get
			{
				return this._UserAccountID;
			}
			set
			{
				if ((this._UserAccountID != value))
				{
					this.OnUserAccountIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccountID = value;
					this.SendPropertyChanged("UserAccountID");
					this.OnUserAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedGFEandDisclosures", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AcceptedGFEandDisclosures
		{
			get
			{
				return this._AcceptedGFEandDisclosures;
			}
			set
			{
				if ((this._AcceptedGFEandDisclosures != value))
				{
					this.OnAcceptedGFEandDisclosuresChanging(value);
					this.SendPropertyChanging();
					this._AcceptedGFEandDisclosures = value;
					this.SendPropertyChanged("AcceptedGFEandDisclosures");
					this.OnAcceptedGFEandDisclosuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedGFEandDisclosuresTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AcceptedGFEandDisclosuresTime
		{
			get
			{
				return this._AcceptedGFEandDisclosuresTime;
			}
			set
			{
				if ((this._AcceptedGFEandDisclosuresTime != value))
				{
					this.OnAcceptedGFEandDisclosuresTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptedGFEandDisclosuresTime = value;
					this.SendPropertyChanged("AcceptedGFEandDisclosuresTime");
					this.OnAcceptedGFEandDisclosuresTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmortizationType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AmortizationType
		{
			get
			{
				return this._AmortizationType;
			}
			set
			{
				if ((this._AmortizationType != value))
				{
					this.OnAmortizationTypeChanging(value);
					this.SendPropertyChanging();
					this._AmortizationType = value;
					this.SendPropertyChanged("AmortizationType");
					this.OnAmortizationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MortgageType
		{
			get
			{
				return this._MortgageType;
			}
			set
			{
				if ((this._MortgageType != value))
				{
					this.OnMortgageTypeChanging(value);
					this.SendPropertyChanging();
					this._MortgageType = value;
					this.SendPropertyChanged("MortgageType");
					this.OnMortgageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptimalBlueIdentifier", DbType="VarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string OptimalBlueIdentifier
		{
			get
			{
				return this._OptimalBlueIdentifier;
			}
			set
			{
				if ((this._OptimalBlueIdentifier != value))
				{
					this.OnOptimalBlueIdentifierChanging(value);
					this.SendPropertyChanging();
					this._OptimalBlueIdentifier = value;
					this.SendPropertyChanged("OptimalBlueIdentifier");
					this.OnOptimalBlueIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTerm", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LoanTerm
		{
			get
			{
				return this._LoanTerm;
			}
			set
			{
				if ((this._LoanTerm != value))
				{
					this.OnLoanTermChanging(value);
					this.SendPropertyChanging();
					this._LoanTerm = value;
					this.SendPropertyChanged("LoanTerm");
					this.OnLoanTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> OriginalPrice
		{
			get
			{
				return this._OriginalPrice;
			}
			set
			{
				if ((this._OriginalPrice != value))
				{
					this.OnOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginalPrice = value;
					this.SendPropertyChanged("OriginalPrice");
					this.OnOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAuthorizationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreditAuthorizationDate
		{
			get
			{
				return this._CreditAuthorizationDate;
			}
			set
			{
				if ((this._CreditAuthorizationDate != value))
				{
					this.OnCreditAuthorizationDateChanging(value);
					this.SendPropertyChanging();
					this._CreditAuthorizationDate = value;
					this.SendPropertyChanged("CreditAuthorizationDate");
					this.OnCreditAuthorizationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LenderCaseNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LenderCaseNumber
		{
			get
			{
				return this._LenderCaseNumber;
			}
			set
			{
				if ((this._LenderCaseNumber != value))
				{
					this.OnLenderCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._LenderCaseNumber = value;
					this.SendPropertyChanged("LenderCaseNumber");
					this.OnLenderCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LockStatus
		{
			get
			{
				return this._LockStatus;
			}
			set
			{
				if ((this._LockStatus != value))
				{
					this.OnLockStatusChanging(value);
					this.SendPropertyChanging();
					this._LockStatus = value;
					this.SendPropertyChanged("LockStatus");
					this.OnLockStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedRateTerm", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FixedRateTerm
		{
			get
			{
				return this._FixedRateTerm;
			}
			set
			{
				if ((this._FixedRateTerm != value))
				{
					this.OnFixedRateTermChanging(value);
					this.SendPropertyChanging();
					this._FixedRateTerm = value;
					this.SendPropertyChanged("FixedRateTerm");
					this.OnFixedRateTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockText", DbType="VarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string LockText
		{
			get
			{
				return this._LockText;
			}
			set
			{
				if ((this._LockText != value))
				{
					this.OnLockTextChanging(value);
					this.SendPropertyChanging();
					this._LockText = value;
					this.SendPropertyChanged("LockText");
					this.OnLockTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConciergeFullName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ConciergeFullName
		{
			get
			{
				return this._ConciergeFullName;
			}
			set
			{
				if ((this._ConciergeFullName != value))
				{
					this.OnConciergeFullNameChanging(value);
					this.SendPropertyChanging();
					this._ConciergeFullName = value;
					this.SendPropertyChanged("ConciergeFullName");
					this.OnConciergeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConciergeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ConciergeId
		{
			get
			{
				return this._ConciergeId;
			}
			set
			{
				if ((this._ConciergeId != value))
				{
					this.OnConciergeIdChanging(value);
					this.SendPropertyChanging();
					this._ConciergeId = value;
					this.SendPropertyChanged("ConciergeId");
					this.OnConciergeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDays", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LockDays
		{
			get
			{
				return this._LockDays;
			}
			set
			{
				if ((this._LockDays != value))
				{
					this.OnLockDaysChanging(value);
					this.SendPropertyChanging();
					this._LockDays = value;
					this.SendPropertyChanged("LockDays");
					this.OnLockDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eDocumentsAccepted", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> eDocumentsAccepted
		{
			get
			{
				return this._eDocumentsAccepted;
			}
			set
			{
				if ((this._eDocumentsAccepted != value))
				{
					this.OneDocumentsAcceptedChanging(value);
					this.SendPropertyChanging();
					this._eDocumentsAccepted = value;
					this.SendPropertyChanged("eDocumentsAccepted");
					this.OneDocumentsAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eDocumentsAcceptanceDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> eDocumentsAcceptanceDate
		{
			get
			{
				return this._eDocumentsAcceptanceDate;
			}
			set
			{
				if ((this._eDocumentsAcceptanceDate != value))
				{
					this.OneDocumentsAcceptanceDateChanging(value);
					this.SendPropertyChanging();
					this._eDocumentsAcceptanceDate = value;
					this.SendPropertyChanged("eDocumentsAcceptanceDate");
					this.OneDocumentsAcceptanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingQueryXml", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement PricingQueryXml
		{
			get
			{
				return this._PricingQueryXml;
			}
			set
			{
				if ((this._PricingQueryXml != value))
				{
					this.OnPricingQueryXmlChanging(value);
					this.SendPropertyChanging();
					this._PricingQueryXml = value;
					this.SendPropertyChanged("PricingQueryXml");
					this.OnPricingQueryXmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeTaxesAndInsurances", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IncludeTaxesAndInsurances
		{
			get
			{
				return this._IncludeTaxesAndInsurances;
			}
			set
			{
				if ((this._IncludeTaxesAndInsurances != value))
				{
					this.OnIncludeTaxesAndInsurancesChanging(value);
					this.SendPropertyChanging();
					this._IncludeTaxesAndInsurances = value;
					this.SendPropertyChanged("IncludeTaxesAndInsurances");
					this.OnIncludeTaxesAndInsurancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveRealEstateAgent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HaveRealEstateAgent
		{
			get
			{
				return this._HaveRealEstateAgent;
			}
			set
			{
				if ((this._HaveRealEstateAgent != value))
				{
					this.OnHaveRealEstateAgentChanging(value);
					this.SendPropertyChanging();
					this._HaveRealEstateAgent = value;
					this.SendPropertyChanged("HaveRealEstateAgent");
					this.OnHaveRealEstateAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepricingDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RepricingDate
		{
			get
			{
				return this._RepricingDate;
			}
			set
			{
				if ((this._RepricingDate != value))
				{
					this.OnRepricingDateChanging(value);
					this.SendPropertyChanging();
					this._RepricingDate = value;
					this.SendPropertyChanged("RepricingDate");
					this.OnRepricingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPriceAdjustment", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TotalPriceAdjustment
		{
			get
			{
				return this._TotalPriceAdjustment;
			}
			set
			{
				if ((this._TotalPriceAdjustment != value))
				{
					this.OnTotalPriceAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._TotalPriceAdjustment = value;
					this.SendPropertyChanged("TotalPriceAdjustment");
					this.OnTotalPriceAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateAdjustmentSubsequentCapPercent", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> RateAdjustmentSubsequentCapPercent
		{
			get
			{
				return this._RateAdjustmentSubsequentCapPercent;
			}
			set
			{
				if ((this._RateAdjustmentSubsequentCapPercent != value))
				{
					this.OnRateAdjustmentSubsequentCapPercentChanging(value);
					this.SendPropertyChanging();
					this._RateAdjustmentSubsequentCapPercent = value;
					this.SendPropertyChanged("RateAdjustmentSubsequentCapPercent");
					this.OnRateAdjustmentSubsequentCapPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateAdjustmentFirstChangeCapRate", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> RateAdjustmentFirstChangeCapRate
		{
			get
			{
				return this._RateAdjustmentFirstChangeCapRate;
			}
			set
			{
				if ((this._RateAdjustmentFirstChangeCapRate != value))
				{
					this.OnRateAdjustmentFirstChangeCapRateChanging(value);
					this.SendPropertyChanging();
					this._RateAdjustmentFirstChangeCapRate = value;
					this.SendPropertyChanged("RateAdjustmentFirstChangeCapRate");
					this.OnRateAdjustmentFirstChangeCapRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateAdjustmentLifetimeCapPercent", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> RateAdjustmentLifetimeCapPercent
		{
			get
			{
				return this._RateAdjustmentLifetimeCapPercent;
			}
			set
			{
				if ((this._RateAdjustmentLifetimeCapPercent != value))
				{
					this.OnRateAdjustmentLifetimeCapPercentChanging(value);
					this.SendPropertyChanging();
					this._RateAdjustmentLifetimeCapPercent = value;
					this.SendPropertyChanged("RateAdjustmentLifetimeCapPercent");
					this.OnRateAdjustmentLifetimeCapPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexType", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string IndexType
		{
			get
			{
				return this._IndexType;
			}
			set
			{
				if ((this._IndexType != value))
				{
					this.OnIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._IndexType = value;
					this.SendPropertyChanged("IndexType");
					this.OnIndexTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloodFee", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> FloodFee
		{
			get
			{
				return this._FloodFee;
			}
			set
			{
				if ((this._FloodFee != value))
				{
					this.OnFloodFeeChanging(value);
					this.SendPropertyChanging();
					this._FloodFee = value;
					this.SendPropertyChanged("FloodFee");
					this.OnFloodFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIP", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> MIP
		{
			get
			{
				return this._MIP;
			}
			set
			{
				if ((this._MIP != value))
				{
					this.OnMIPChanging(value);
					this.SendPropertyChanging();
					this._MIP = value;
					this.SendPropertyChanged("MIP");
					this.OnMIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownPaymentTypeCode", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DownPaymentTypeCode
		{
			get
			{
				return this._DownPaymentTypeCode;
			}
			set
			{
				if ((this._DownPaymentTypeCode != value))
				{
					this.OnDownPaymentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DownPaymentTypeCode = value;
					this.SendPropertyChanged("DownPaymentTypeCode");
					this.OnDownPaymentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleInName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TitleInName
		{
			get
			{
				return this._TitleInName;
			}
			set
			{
				if ((this._TitleInName != value))
				{
					this.OnTitleInNameChanging(value);
					this.SendPropertyChanging();
					this._TitleInName = value;
					this.SendPropertyChanged("TitleInName");
					this.OnTitleInNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleInNameValue", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string TitleInNameValue
		{
			get
			{
				return this._TitleInNameValue;
			}
			set
			{
				if ((this._TitleInNameValue != value))
				{
					this.OnTitleInNameValueChanging(value);
					this.SendPropertyChanging();
					this._TitleInNameValue = value;
					this.SendPropertyChanged("TitleInNameValue");
					this.OnTitleInNameValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MannerTitleHeld", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MannerTitleHeld
		{
			get
			{
				return this._MannerTitleHeld;
			}
			set
			{
				if ((this._MannerTitleHeld != value))
				{
					this.OnMannerTitleHeldChanging(value);
					this.SendPropertyChanging();
					this._MannerTitleHeld = value;
					this.SendPropertyChanged("MannerTitleHeld");
					this.OnMannerTitleHeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullVesting", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string FullVesting
		{
			get
			{
				return this._FullVesting;
			}
			set
			{
				if ((this._FullVesting != value))
				{
					this.OnFullVestingChanging(value);
					this.SendPropertyChanging();
					this._FullVesting = value;
					this.SendPropertyChanged("FullVesting");
					this.OnFullVestingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateHeldIn", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EstateHeldIn
		{
			get
			{
				return this._EstateHeldIn;
			}
			set
			{
				if ((this._EstateHeldIn != value))
				{
					this.OnEstateHeldInChanging(value);
					this.SendPropertyChanging();
					this._EstateHeldIn = value;
					this.SendPropertyChanged("EstateHeldIn");
					this.OnEstateHeldInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFrequency", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PaymentFrequency
		{
			get
			{
				return this._PaymentFrequency;
			}
			set
			{
				if ((this._PaymentFrequency != value))
				{
					this.OnPaymentFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PaymentFrequency = value;
					this.SendPropertyChanged("PaymentFrequency");
					this.OnPaymentFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexValue", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> IndexValue
		{
			get
			{
				return this._IndexValue;
			}
			set
			{
				if ((this._IndexValue != value))
				{
					this.OnIndexValueChanging(value);
					this.SendPropertyChanging();
					this._IndexValue = value;
					this.SendPropertyChanged("IndexValue");
					this.OnIndexValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentPeriod", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AdjustmentPeriod
		{
			get
			{
				return this._AdjustmentPeriod;
			}
			set
			{
				if ((this._AdjustmentPeriod != value))
				{
					this.OnAdjustmentPeriodChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentPeriod = value;
					this.SendPropertyChanged("AdjustmentPeriod");
					this.OnAdjustmentPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorRate", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> FloorRate
		{
			get
			{
				return this._FloorRate;
			}
			set
			{
				if ((this._FloorRate != value))
				{
					this.OnFloorRateChanging(value);
					this.SendPropertyChanging();
					this._FloorRate = value;
					this.SendPropertyChanged("FloorRate");
					this.OnFloorRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPaymentAdjustmentMonths", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FirstPaymentAdjustmentMonths
		{
			get
			{
				return this._FirstPaymentAdjustmentMonths;
			}
			set
			{
				if ((this._FirstPaymentAdjustmentMonths != value))
				{
					this.OnFirstPaymentAdjustmentMonthsChanging(value);
					this.SendPropertyChanging();
					this._FirstPaymentAdjustmentMonths = value;
					this.SendPropertyChanged("FirstPaymentAdjustmentMonths");
					this.OnFirstPaymentAdjustmentMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockRequestDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LockRequestDate
		{
			get
			{
				return this._LockRequestDate;
			}
			set
			{
				if ((this._LockRequestDate != value))
				{
					this.OnLockRequestDateChanging(value);
					this.SendPropertyChanging();
					this._LockRequestDate = value;
					this.SendPropertyChanged("LockRequestDate");
					this.OnLockRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDisbursementDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FinalDisbursementDate
		{
			get
			{
				return this._FinalDisbursementDate;
			}
			set
			{
				if ((this._FinalDisbursementDate != value))
				{
					this.OnFinalDisbursementDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDisbursementDate = value;
					this.SendPropertyChanged("FinalDisbursementDate");
					this.OnFinalDisbursementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SigningDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SigningDate
		{
			get
			{
				return this._SigningDate;
			}
			set
			{
				if ((this._SigningDate != value))
				{
					this.OnSigningDateChanging(value);
					this.SendPropertyChanging();
					this._SigningDate = value;
					this.SendPropertyChanged("SigningDate");
					this.OnSigningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefinancePurpose", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RefinancePurpose
		{
			get
			{
				return this._RefinancePurpose;
			}
			set
			{
				if ((this._RefinancePurpose != value))
				{
					this.OnRefinancePurposeChanging(value);
					this.SendPropertyChanging();
					this._RefinancePurpose = value;
					this.SendPropertyChanged("RefinancePurpose");
					this.OnRefinancePurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableDigitalDocsCall", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> EnableDigitalDocsCall
		{
			get
			{
				return this._EnableDigitalDocsCall;
			}
			set
			{
				if ((this._EnableDigitalDocsCall != value))
				{
					this.OnEnableDigitalDocsCallChanging(value);
					this.SendPropertyChanging();
					this._EnableDigitalDocsCall = value;
					this.SendPropertyChanged("EnableDigitalDocsCall");
					this.OnEnableDigitalDocsCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConciergeCurrentActivityName", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string ConciergeCurrentActivityName
		{
			get
			{
				return this._ConciergeCurrentActivityName;
			}
			set
			{
				if ((this._ConciergeCurrentActivityName != value))
				{
					this.OnConciergeCurrentActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ConciergeCurrentActivityName = value;
					this.SendPropertyChanged("ConciergeCurrentActivityName");
					this.OnConciergeCurrentActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LosFolderId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LosFolderId
		{
			get
			{
				return this._LosFolderId;
			}
			set
			{
				if ((this._LosFolderId != value))
				{
					this.OnLosFolderIdChanging(value);
					this.SendPropertyChanging();
					this._LosFolderId = value;
					this.SendPropertyChanged("LosFolderId");
					this.OnLosFolderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanApplicationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LoanApplicationDate
		{
			get
			{
				return this._LoanApplicationDate;
			}
			set
			{
				if ((this._LoanApplicationDate != value))
				{
					this.OnLoanApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._LoanApplicationDate = value;
					this.SendPropertyChanged("LoanApplicationDate");
					this.OnLoanApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyCaseNumber", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AgencyCaseNumber
		{
			get
			{
				return this._AgencyCaseNumber;
			}
			set
			{
				if ((this._AgencyCaseNumber != value))
				{
					this.OnAgencyCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._AgencyCaseNumber = value;
					this.SendPropertyChanged("AgencyCaseNumber");
					this.OnAgencyCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNoCost", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsNoCost
		{
			get
			{
				return this._IsNoCost;
			}
			set
			{
				if ((this._IsNoCost != value))
				{
					this.OnIsNoCostChanging(value);
					this.SendPropertyChanging();
					this._IsNoCost = value;
					this.SendPropertyChanged("IsNoCost");
					this.OnIsNoCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustedPoints", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> AdjustedPoints
		{
			get
			{
				return this._AdjustedPoints;
			}
			set
			{
				if ((this._AdjustedPoints != value))
				{
					this.OnAdjustedPointsChanging(value);
					this.SendPropertyChanging();
					this._AdjustedPoints = value;
					this.SendPropertyChanged("AdjustedPoints");
					this.OnAdjustedPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashOutAmount", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> CashOutAmount
		{
			get
			{
				return this._CashOutAmount;
			}
			set
			{
				if ((this._CashOutAmount != value))
				{
					this.OnCashOutAmountChanging(value);
					this.SendPropertyChanging();
					this._CashOutAmount = value;
					this.SendPropertyChanged("CashOutAmount");
					this.OnCashOutAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConciergeCurrentActivityStatus", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string ConciergeCurrentActivityStatus
		{
			get
			{
				return this._ConciergeCurrentActivityStatus;
			}
			set
			{
				if ((this._ConciergeCurrentActivityStatus != value))
				{
					this.OnConciergeCurrentActivityStatusChanging(value);
					this.SendPropertyChanging();
					this._ConciergeCurrentActivityStatus = value;
					this.SendPropertyChanged("ConciergeCurrentActivityStatus");
					this.OnConciergeCurrentActivityStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReDisclosureNeeded", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ReDisclosureNeeded
		{
			get
			{
				return this._ReDisclosureNeeded;
			}
			set
			{
				if ((this._ReDisclosureNeeded != value))
				{
					this.OnReDisclosureNeededChanging(value);
					this.SendPropertyChanging();
					this._ReDisclosureNeeded = value;
					this.SendPropertyChanged("ReDisclosureNeeded");
					this.OnReDisclosureNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTI", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DTI
		{
			get
			{
				return this._DTI;
			}
			set
			{
				if ((this._DTI != value))
				{
					this.OnDTIChanging(value);
					this.SendPropertyChanging();
					this._DTI = value;
					this.SendPropertyChanged("DTI");
					this.OnDTIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HousingRatio", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HousingRatio
		{
			get
			{
				return this._HousingRatio;
			}
			set
			{
				if ((this._HousingRatio != value))
				{
					this.OnHousingRatioChanging(value);
					this.SendPropertyChanging();
					this._HousingRatio = value;
					this.SendPropertyChanged("HousingRatio");
					this.OnHousingRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> InvestorType
		{
			get
			{
				return this._InvestorType;
			}
			set
			{
				if ((this._InvestorType != value))
				{
					this.OnInvestorTypeChanging(value);
					this.SendPropertyChanging();
					this._InvestorType = value;
					this.SendPropertyChanged("InvestorType");
					this.OnInvestorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisclosuresModel", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DisclosuresModel
		{
			get
			{
				return this._DisclosuresModel;
			}
			set
			{
				if ((this._DisclosuresModel != value))
				{
					this.OnDisclosuresModelChanging(value);
					this.SendPropertyChanging();
					this._DisclosuresModel = value;
					this.SendPropertyChanged("DisclosuresModel");
					this.OnDisclosuresModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPricingQuery", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement OriginalPricingQuery
		{
			get
			{
				return this._OriginalPricingQuery;
			}
			set
			{
				if ((this._OriginalPricingQuery != value))
				{
					this.OnOriginalPricingQueryChanging(value);
					this.SendPropertyChanging();
					this._OriginalPricingQuery = value;
					this.SendPropertyChanged("OriginalPricingQuery");
					this.OnOriginalPricingQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByImpersonatedConciergeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedByImpersonatedConciergeId
		{
			get
			{
				return this._CreatedByImpersonatedConciergeId;
			}
			set
			{
				if ((this._CreatedByImpersonatedConciergeId != value))
				{
					this.OnCreatedByImpersonatedConciergeIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByImpersonatedConciergeId = value;
					this.SendPropertyChanged("CreatedByImpersonatedConciergeId");
					this.OnCreatedByImpersonatedConciergeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartCreditEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SmartCreditEnabled
		{
			get
			{
				return this._SmartCreditEnabled;
			}
			set
			{
				if ((this._SmartCreditEnabled != value))
				{
					this.OnSmartCreditEnabledChanging(value);
					this.SendPropertyChanging();
					this._SmartCreditEnabled = value;
					this.SendPropertyChanged("SmartCreditEnabled");
					this.OnSmartCreditEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaFullName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LoaFullName
		{
			get
			{
				return this._LoaFullName;
			}
			set
			{
				if ((this._LoaFullName != value))
				{
					this.OnLoaFullNameChanging(value);
					this.SendPropertyChanging();
					this._LoaFullName = value;
					this.SendPropertyChanged("LoaFullName");
					this.OnLoaFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LoaID
		{
			get
			{
				return this._LoaID;
			}
			set
			{
				if ((this._LoaID != value))
				{
					this.OnLoaIDChanging(value);
					this.SendPropertyChanging();
					this._LoaID = value;
					this.SendPropertyChanged("LoaID");
					this.OnLoaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAmountIncludedInLoanAmount", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CostAmountIncludedInLoanAmount
		{
			get
			{
				return this._CostAmountIncludedInLoanAmount;
			}
			set
			{
				if ((this._CostAmountIncludedInLoanAmount != value))
				{
					this.OnCostAmountIncludedInLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._CostAmountIncludedInLoanAmount = value;
					this.SendPropertyChanged("CostAmountIncludedInLoanAmount");
					this.OnCostAmountIncludedInLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeCostOption", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IncludeCostOption
		{
			get
			{
				return this._IncludeCostOption;
			}
			set
			{
				if ((this._IncludeCostOption != value))
				{
					this.OnIncludeCostOptionChanging(value);
					this.SendPropertyChanging();
					this._IncludeCostOption = value;
					this.SendPropertyChanged("IncludeCostOption");
					this.OnIncludeCostOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFHACaseNoAssigned", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateFHACaseNoAssigned
		{
			get
			{
				return this._DateFHACaseNoAssigned;
			}
			set
			{
				if ((this._DateFHACaseNoAssigned != value))
				{
					this.OnDateFHACaseNoAssignedChanging(value);
					this.SendPropertyChanging();
					this._DateFHACaseNoAssigned = value;
					this.SendPropertyChanged("DateFHACaseNoAssigned");
					this.OnDateFHACaseNoAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedToReprice", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NeedToReprice
		{
			get
			{
				return this._NeedToReprice;
			}
			set
			{
				if ((this._NeedToReprice != value))
				{
					this.OnNeedToRepriceChanging(value);
					this.SendPropertyChanging();
					this._NeedToReprice = value;
					this.SendPropertyChanged("NeedToReprice");
					this.OnNeedToRepriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REOAdded", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool REOAdded
		{
			get
			{
				return this._REOAdded;
			}
			set
			{
				if ((this._REOAdded != value))
				{
					this.OnREOAddedChanging(value);
					this.SendPropertyChanging();
					this._REOAdded = value;
					this.SendPropertyChanged("REOAdded");
					this.OnREOAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuallyEnteredCloseDate", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ManuallyEnteredCloseDate
		{
			get
			{
				return this._ManuallyEnteredCloseDate;
			}
			set
			{
				if ((this._ManuallyEnteredCloseDate != value))
				{
					this.OnManuallyEnteredCloseDateChanging(value);
					this.SendPropertyChanging();
					this._ManuallyEnteredCloseDate = value;
					this.SendPropertyChanged("ManuallyEnteredCloseDate");
					this.OnManuallyEnteredCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialApr", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> InitialApr
		{
			get
			{
				return this._InitialApr;
			}
			set
			{
				if ((this._InitialApr != value))
				{
					this.OnInitialAprChanging(value);
					this.SendPropertyChanging();
					this._InitialApr = value;
					this.SendPropertyChanged("InitialApr");
					this.OnInitialAprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialPrice", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> InitialPrice
		{
			get
			{
				return this._InitialPrice;
			}
			set
			{
				if ((this._InitialPrice != value))
				{
					this.OnInitialPriceChanging(value);
					this.SendPropertyChanging();
					this._InitialPrice = value;
					this.SendPropertyChanged("InitialPrice");
					this.OnInitialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialAdjustedPoints", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> InitialAdjustedPoints
		{
			get
			{
				return this._InitialAdjustedPoints;
			}
			set
			{
				if ((this._InitialAdjustedPoints != value))
				{
					this.OnInitialAdjustedPointsChanging(value);
					this.SendPropertyChanging();
					this._InitialAdjustedPoints = value;
					this.SendPropertyChanged("InitialAdjustedPoints");
					this.OnInitialAdjustedPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopied", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCopied
		{
			get
			{
				return this._IsCopied;
			}
			set
			{
				if ((this._IsCopied != value))
				{
					this.OnIsCopiedChanging(value);
					this.SendPropertyChanging();
					this._IsCopied = value;
					this.SendPropertyChanged("IsCopied");
					this.OnIsCopiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChanged", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PriceChanged
		{
			get
			{
				return this._PriceChanged;
			}
			set
			{
				if ((this._PriceChanged != value))
				{
					this.OnPriceChangedChanging(value);
					this.SendPropertyChanging();
					this._PriceChanged = value;
					this.SendPropertyChanged("PriceChanged");
					this.OnPriceChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variance", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> Variance
		{
			get
			{
				return this._Variance;
			}
			set
			{
				if ((this._Variance != value))
				{
					this.OnVarianceChanging(value);
					this.SendPropertyChanging();
					this._Variance = value;
					this.SendPropertyChanged("Variance");
					this.OnVarianceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GFESettlementChargesDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> GFESettlementChargesDate
		{
			get
			{
				return this._GFESettlementChargesDate;
			}
			set
			{
				if ((this._GFESettlementChargesDate != value))
				{
					this.OnGFESettlementChargesDateChanging(value);
					this.SendPropertyChanging();
					this._GFESettlementChargesDate = value;
					this.SendPropertyChanged("GFESettlementChargesDate");
					this.OnGFESettlementChargesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromAllInvestorView", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsFromAllInvestorView
		{
			get
			{
				return this._IsFromAllInvestorView;
			}
			set
			{
				if ((this._IsFromAllInvestorView != value))
				{
					this.OnIsFromAllInvestorViewChanging(value);
					this.SendPropertyChanging();
					this._IsFromAllInvestorView = value;
					this.SendPropertyChanged("IsFromAllInvestorView");
					this.OnIsFromAllInvestorViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBUserName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string OBUserName
		{
			get
			{
				return this._OBUserName;
			}
			set
			{
				if ((this._OBUserName != value))
				{
					this.OnOBUserNameChanging(value);
					this.SendPropertyChanging();
					this._OBUserName = value;
					this.SendPropertyChanged("OBUserName");
					this.OnOBUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarpLoanType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HarpLoanType
		{
			get
			{
				return this._HarpLoanType;
			}
			set
			{
				if ((this._HarpLoanType != value))
				{
					this.OnHarpLoanTypeChanging(value);
					this.SendPropertyChanging();
					this._HarpLoanType = value;
					this.SendPropertyChanged("HarpLoanType");
					this.OnHarpLoanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aus", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Aus
		{
			get
			{
				return this._Aus;
			}
			set
			{
				if ((this._Aus != value))
				{
					this.OnAusChanging(value);
					this.SendPropertyChanging();
					this._Aus = value;
					this.SendPropertyChanged("Aus");
					this.OnAusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppAndLock", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AppAndLock
		{
			get
			{
				return this._AppAndLock;
			}
			set
			{
				if ((this._AppAndLock != value))
				{
					this.OnAppAndLockChanging(value);
					this.SendPropertyChanging();
					this._AppAndLock = value;
					this.SendPropertyChanged("AppAndLock");
					this.OnAppAndLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingDTI", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> PricingDTI
		{
			get
			{
				return this._PricingDTI;
			}
			set
			{
				if ((this._PricingDTI != value))
				{
					this.OnPricingDTIChanging(value);
					this.SendPropertyChanging();
					this._PricingDTI = value;
					this.SendPropertyChanged("PricingDTI");
					this.OnPricingDTIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportToFNMInProgress", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ImportToFNMInProgress
		{
			get
			{
				return this._ImportToFNMInProgress;
			}
			set
			{
				if ((this._ImportToFNMInProgress != value))
				{
					this.OnImportToFNMInProgressChanging(value);
					this.SendPropertyChanging();
					this._ImportToFNMInProgress = value;
					this.SendPropertyChanged("ImportToFNMInProgress");
					this.OnImportToFNMInProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeBuying", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HomeBuying
		{
			get
			{
				return this._HomeBuying;
			}
			set
			{
				if ((this._HomeBuying != value))
				{
					this.OnHomeBuyingChanging(value);
					this.SendPropertyChanging();
					this._HomeBuying = value;
					this.SendPropertyChanged("HomeBuying");
					this.OnHomeBuyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eSigningVendorIntegrationEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> eSigningVendorIntegrationEnabled
		{
			get
			{
				return this._eSigningVendorIntegrationEnabled;
			}
			set
			{
				if ((this._eSigningVendorIntegrationEnabled != value))
				{
					this.OneSigningVendorIntegrationEnabledChanging(value);
					this.SendPropertyChanging();
					this._eSigningVendorIntegrationEnabled = value;
					this.SendPropertyChanged("eSigningVendorIntegrationEnabled");
					this.OneSigningVendorIntegrationEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCompletedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ApplicationCompletedDate
		{
			get
			{
				return this._ApplicationCompletedDate;
			}
			set
			{
				if ((this._ApplicationCompletedDate != value))
				{
					this.OnApplicationCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCompletedDate = value;
					this.SendPropertyChanged("ApplicationCompletedDate");
					this.OnApplicationCompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreApprovalStatus", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PreApprovalStatus
		{
			get
			{
				return this._PreApprovalStatus;
			}
			set
			{
				if ((this._PreApprovalStatus != value))
				{
					this.OnPreApprovalStatusChanging(value);
					this.SendPropertyChanging();
					this._PreApprovalStatus = value;
					this.SendPropertyChanged("PreApprovalStatus");
					this.OnPreApprovalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallCenterId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CallCenterId
		{
			get
			{
				return this._CallCenterId;
			}
			set
			{
				if ((this._CallCenterId != value))
				{
					this.OnCallCenterIdChanging(value);
					this.SendPropertyChanging();
					this._CallCenterId = value;
					this.SendPropertyChanged("CallCenterId");
					this.OnCallCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanOriginatorSource", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LoanOriginatorSource
		{
			get
			{
				return this._LoanOriginatorSource;
			}
			set
			{
				if ((this._LoanOriginatorSource != value))
				{
					this.OnLoanOriginatorSourceChanging(value);
					this.SendPropertyChanging();
					this._LoanOriginatorSource = value;
					this.SendPropertyChanged("LoanOriginatorSource");
					this.OnLoanOriginatorSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadSourceId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LeadSourceId
		{
			get
			{
				return this._LeadSourceId;
			}
			set
			{
				if ((this._LeadSourceId != value))
				{
					this.OnLeadSourceIdChanging(value);
					this.SendPropertyChanging();
					this._LeadSourceId = value;
					this.SendPropertyChanged("LeadSourceId");
					this.OnLeadSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadCreatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeadCreatedOn
		{
			get
			{
				return this._LeadCreatedOn;
			}
			set
			{
				if ((this._LeadCreatedOn != value))
				{
					this.OnLeadCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._LeadCreatedOn = value;
					this.SendPropertyChanged("LeadCreatedOn");
					this.OnLeadCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHarp", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsHarp
		{
			get
			{
				return this._IsHarp;
			}
			set
			{
				if ((this._IsHarp != value))
				{
					this.OnIsHarpChanging(value);
					this.SendPropertyChanging();
					this._IsHarp = value;
					this.SendPropertyChanged("IsHarp");
					this.OnIsHarpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartGFEId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SmartGFEId
		{
			get
			{
				return this._SmartGFEId;
			}
			set
			{
				if ((this._SmartGFEId != value))
				{
					this.OnSmartGFEIdChanging(value);
					this.SendPropertyChanging();
					this._SmartGFEId = value;
					this.SendPropertyChanged("SmartGFEId");
					this.OnSmartGFEIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conforming", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Conforming
		{
			get
			{
				return this._Conforming;
			}
			set
			{
				if ((this._Conforming != value))
				{
					this.OnConformingChanging(value);
					this.SendPropertyChanging();
					this._Conforming = value;
					this.SendPropertyChanged("Conforming");
					this.OnConformingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorName", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string InvestorName
		{
			get
			{
				return this._InvestorName;
			}
			set
			{
				if ((this._InvestorName != value))
				{
					this.OnInvestorNameChanging(value);
					this.SendPropertyChanging();
					this._InvestorName = value;
					this.SendPropertyChanged("InvestorName");
					this.OnInvestorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanWithoutPricing", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> LoanWithoutPricing
		{
			get
			{
				return this._LoanWithoutPricing;
			}
			set
			{
				if ((this._LoanWithoutPricing != value))
				{
					this.OnLoanWithoutPricingChanging(value);
					this.SendPropertyChanging();
					this._LoanWithoutPricing = value;
					this.SendPropertyChanged("LoanWithoutPricing");
					this.OnLoanWithoutPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ChannelId
		{
			get
			{
				return this._ChannelId;
			}
			set
			{
				if ((this._ChannelId != value))
				{
					this.OnChannelIdChanging(value);
					this.SendPropertyChanging();
					this._ChannelId = value;
					this.SendPropertyChanged("ChannelId");
					this.OnChannelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearAboutUs", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HearAboutUs
		{
			get
			{
				return this._HearAboutUs;
			}
			set
			{
				if ((this._HearAboutUs != value))
				{
					this.OnHearAboutUsChanging(value);
					this.SendPropertyChanging();
					this._HearAboutUs = value;
					this.SendPropertyChanged("HearAboutUs");
					this.OnHearAboutUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartGFETempId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SmartGFETempId
		{
			get
			{
				return this._SmartGFETempId;
			}
			set
			{
				if ((this._SmartGFETempId != value))
				{
					this.OnSmartGFETempIdChanging(value);
					this.SendPropertyChanging();
					this._SmartGFETempId = value;
					this.SendPropertyChanged("SmartGFETempId");
					this.OnSmartGFETempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginationSystem", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OriginationSystem
		{
			get
			{
				return this._OriginationSystem;
			}
			set
			{
				if ((this._OriginationSystem != value))
				{
					this.OnOriginationSystemChanging(value);
					this.SendPropertyChanging();
					this._OriginationSystem = value;
					this.SendPropertyChanged("OriginationSystem");
					this.OnOriginationSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAppraisalLoan", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAppraisalLoan
		{
			get
			{
				return this._IsAppraisalLoan;
			}
			set
			{
				if ((this._IsAppraisalLoan != value))
				{
					this.OnIsAppraisalLoanChanging(value);
					this.SendPropertyChanging();
					this._IsAppraisalLoan = value;
					this.SendPropertyChanged("IsAppraisalLoan");
					this.OnIsAppraisalLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartGFEEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SmartGFEEnabled
		{
			get
			{
				return this._SmartGFEEnabled;
			}
			set
			{
				if ((this._SmartGFEEnabled != value))
				{
					this.OnSmartGFEEnabledChanging(value);
					this.SendPropertyChanging();
					this._SmartGFEEnabled = value;
					this.SendPropertyChanged("SmartGFEEnabled");
					this.OnSmartGFEEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerLeadSourceId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PartnerLeadSourceId
		{
			get
			{
				return this._PartnerLeadSourceId;
			}
			set
			{
				if ((this._PartnerLeadSourceId != value))
				{
					this.OnPartnerLeadSourceIdChanging(value);
					this.SendPropertyChanging();
					this._PartnerLeadSourceId = value;
					this.SendPropertyChanged("PartnerLeadSourceId");
					this.OnPartnerLeadSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockExpireDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LockExpireDate
		{
			get
			{
				return this._LockExpireDate;
			}
			set
			{
				if ((this._LockExpireDate != value))
				{
					this.OnLockExpireDateChanging(value);
					this.SendPropertyChanging();
					this._LockExpireDate = value;
					this.SendPropertyChanged("LockExpireDate");
					this.OnLockExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingIdentified", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OfferingIdentified
		{
			get
			{
				return this._OfferingIdentified;
			}
			set
			{
				if ((this._OfferingIdentified != value))
				{
					this.OnOfferingIdentifiedChanging(value);
					this.SendPropertyChanging();
					this._OfferingIdentified = value;
					this.SendPropertyChanged("OfferingIdentified");
					this.OnOfferingIdentifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreApprovalRequestDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PreApprovalRequestDate
		{
			get
			{
				return this._PreApprovalRequestDate;
			}
			set
			{
				if ((this._PreApprovalRequestDate != value))
				{
					this.OnPreApprovalRequestDateChanging(value);
					this.SendPropertyChanging();
					this._PreApprovalRequestDate = value;
					this.SendPropertyChanged("PreApprovalRequestDate");
					this.OnPreApprovalRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBalloonPayment", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsBalloonPayment
		{
			get
			{
				return this._IsBalloonPayment;
			}
			set
			{
				if ((this._IsBalloonPayment != value))
				{
					this.OnIsBalloonPaymentChanging(value);
					this.SendPropertyChanging();
					this._IsBalloonPayment = value;
					this.SendPropertyChanged("IsBalloonPayment");
					this.OnIsBalloonPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGFEAlertSent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsGFEAlertSent
		{
			get
			{
				return this._IsGFEAlertSent;
			}
			set
			{
				if ((this._IsGFEAlertSent != value))
				{
					this.OnIsGFEAlertSentChanging(value);
					this.SendPropertyChanging();
					this._IsGFEAlertSent = value;
					this.SendPropertyChanged("IsGFEAlertSent");
					this.OnIsGFEAlertSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentLoanId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ParentLoanId
		{
			get
			{
				return this._ParentLoanId;
			}
			set
			{
				if ((this._ParentLoanId != value))
				{
					this.OnParentLoanIdChanging(value);
					this.SendPropertyChanging();
					this._ParentLoanId = value;
					this.SendPropertyChanged("ParentLoanId");
					this.OnParentLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RUCode", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RUCode
		{
			get
			{
				return this._RUCode;
			}
			set
			{
				if ((this._RUCode != value))
				{
					this.OnRUCodeChanging(value);
					this.SendPropertyChanging();
					this._RUCode = value;
					this.SendPropertyChanged("RUCode");
					this.OnRUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisclosedAPR", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DisclosedAPR
		{
			get
			{
				return this._DisclosedAPR;
			}
			set
			{
				if ((this._DisclosedAPR != value))
				{
					this.OnDisclosedAPRChanging(value);
					this.SendPropertyChanging();
					this._DisclosedAPR = value;
					this.SendPropertyChanged("DisclosedAPR");
					this.OnDisclosedAPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifyingRate", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> QualifyingRate
		{
			get
			{
				return this._QualifyingRate;
			}
			set
			{
				if ((this._QualifyingRate != value))
				{
					this.OnQualifyingRateChanging(value);
					this.SendPropertyChanging();
					this._QualifyingRate = value;
					this.SendPropertyChanged("QualifyingRate");
					this.OnQualifyingRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifyingHousing", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> QualifyingHousing
		{
			get
			{
				return this._QualifyingHousing;
			}
			set
			{
				if ((this._QualifyingHousing != value))
				{
					this.OnQualifyingHousingChanging(value);
					this.SendPropertyChanging();
					this._QualifyingHousing = value;
					this.SendPropertyChanged("QualifyingHousing");
					this.OnQualifyingHousingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifyingDTI", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> QualifyingDTI
		{
			get
			{
				return this._QualifyingDTI;
			}
			set
			{
				if ((this._QualifyingDTI != value))
				{
					this.OnQualifyingDTIChanging(value);
					this.SendPropertyChanging();
					this._QualifyingDTI = value;
					this.SendPropertyChanged("QualifyingDTI");
					this.OnQualifyingDTIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FICOScoreForPricing", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FICOScoreForPricing
		{
			get
			{
				return this._FICOScoreForPricing;
			}
			set
			{
				if ((this._FICOScoreForPricing != value))
				{
					this.OnFICOScoreForPricingChanging(value);
					this.SendPropertyChanging();
					this._FICOScoreForPricing = value;
					this.SendPropertyChanged("FICOScoreForPricing");
					this.OnFICOScoreForPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoanImported", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsLoanImported
		{
			get
			{
				return this._IsLoanImported;
			}
			set
			{
				if ((this._IsLoanImported != value))
				{
					this.OnIsLoanImportedChanging(value);
					this.SendPropertyChanging();
					this._IsLoanImported = value;
					this.SendPropertyChanged("IsLoanImported");
					this.OnIsLoanImportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiquidAssetReserves", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LiquidAssetReserves
		{
			get
			{
				return this._LiquidAssetReserves;
			}
			set
			{
				if ((this._LiquidAssetReserves != value))
				{
					this.OnLiquidAssetReservesChanging(value);
					this.SendPropertyChanging();
					this._LiquidAssetReserves = value;
					this.SendPropertyChanged("LiquidAssetReserves");
					this.OnLiquidAssetReservesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageInsuranceType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MortgageInsuranceType
		{
			get
			{
				return this._MortgageInsuranceType;
			}
			set
			{
				if ((this._MortgageInsuranceType != value))
				{
					this.OnMortgageInsuranceTypeChanging(value);
					this.SendPropertyChanging();
					this._MortgageInsuranceType = value;
					this.SendPropertyChanged("MortgageInsuranceType");
					this.OnMortgageInsuranceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DecisionStatus
		{
			get
			{
				return this._DecisionStatus;
			}
			set
			{
				if ((this._DecisionStatus != value))
				{
					this.OnDecisionStatusChanging(value);
					this.SendPropertyChanging();
					this._DecisionStatus = value;
					this.SendPropertyChanged("DecisionStatus");
					this.OnDecisionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAInformationId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> VAInformationId
		{
			get
			{
				return this._VAInformationId;
			}
			set
			{
				if ((this._VAInformationId != value))
				{
					this.OnVAInformationIdChanging(value);
					this.SendPropertyChanging();
					this._VAInformationId = value;
					this.SendPropertyChanged("VAInformationId");
					this.OnVAInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfPartner", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string NameOfPartner
		{
			get
			{
				return this._NameOfPartner;
			}
			set
			{
				if ((this._NameOfPartner != value))
				{
					this.OnNameOfPartnerChanging(value);
					this.SendPropertyChanging();
					this._NameOfPartner = value;
					this.SendPropertyChanged("NameOfPartner");
					this.OnNameOfPartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorMatrixId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> InvestorMatrixId
		{
			get
			{
				return this._InvestorMatrixId;
			}
			set
			{
				if ((this._InvestorMatrixId != value))
				{
					this.OnInvestorMatrixIdChanging(value);
					this.SendPropertyChanging();
					this._InvestorMatrixId = value;
					this.SendPropertyChanged("InvestorMatrixId");
					this.OnInvestorMatrixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellSideInformationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SellSideInformationId
		{
			get
			{
				return this._SellSideInformationId;
			}
			set
			{
				if ((this._SellSideInformationId != value))
				{
					this.OnSellSideInformationIdChanging(value);
					this.SendPropertyChanging();
					this._SellSideInformationId = value;
					this.SendPropertyChanged("SellSideInformationId");
					this.OnSellSideInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorPrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InvestorPrice
		{
			get
			{
				return this._InvestorPrice;
			}
			set
			{
				if ((this._InvestorPrice != value))
				{
					this.OnInvestorPriceChanging(value);
					this.SendPropertyChanging();
					this._InvestorPrice = value;
					this.SendPropertyChanged("InvestorPrice");
					this.OnInvestorPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterprisePrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnterprisePrice
		{
			get
			{
				return this._EnterprisePrice;
			}
			set
			{
				if ((this._EnterprisePrice != value))
				{
					this.OnEnterprisePriceChanging(value);
					this.SendPropertyChanging();
					this._EnterprisePrice = value;
					this.SendPropertyChanged("EnterprisePrice");
					this.OnEnterprisePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanOfficerPrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanOfficerPrice
		{
			get
			{
				return this._LoanOfficerPrice;
			}
			set
			{
				if ((this._LoanOfficerPrice != value))
				{
					this.OnLoanOfficerPriceChanging(value);
					this.SendPropertyChanging();
					this._LoanOfficerPrice = value;
					this.SendPropertyChanged("LoanOfficerPrice");
					this.OnLoanOfficerPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalLoanOfficerPrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FinalLoanOfficerPrice
		{
			get
			{
				return this._FinalLoanOfficerPrice;
			}
			set
			{
				if ((this._FinalLoanOfficerPrice != value))
				{
					this.OnFinalLoanOfficerPriceChanging(value);
					this.SendPropertyChanging();
					this._FinalLoanOfficerPrice = value;
					this.SendPropertyChanged("FinalLoanOfficerPrice");
					this.OnFinalLoanOfficerPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorPurchasePrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InvestorPurchasePrice
		{
			get
			{
				return this._InvestorPurchasePrice;
			}
			set
			{
				if ((this._InvestorPurchasePrice != value))
				{
					this.OnInvestorPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._InvestorPurchasePrice = value;
					this.SendPropertyChanged("InvestorPurchasePrice");
					this.OnInvestorPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalPurchasePrice", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FinalPurchasePrice
		{
			get
			{
				return this._FinalPurchasePrice;
			}
			set
			{
				if ((this._FinalPurchasePrice != value))
				{
					this.OnFinalPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._FinalPurchasePrice = value;
					this.SendPropertyChanged("FinalPurchasePrice");
					this.OnFinalPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustedRate", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> AdjustedRate
		{
			get
			{
				return this._AdjustedRate;
			}
			set
			{
				if ((this._AdjustedRate != value))
				{
					this.OnAdjustedRateChanging(value);
					this.SendPropertyChanging();
					this._AdjustedRate = value;
					this.SendPropertyChanged("AdjustedRate");
					this.OnAdjustedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentMilestone", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CurrentMilestone
		{
			get
			{
				return this._CurrentMilestone;
			}
			set
			{
				if ((this._CurrentMilestone != value))
				{
					this.OnCurrentMilestoneChanging(value);
					this.SendPropertyChanging();
					this._CurrentMilestone = value;
					this.SendPropertyChanged("CurrentMilestone");
					this.OnCurrentMilestoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisclosureStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DisclosureStatus
		{
			get
			{
				return this._DisclosureStatus;
			}
			set
			{
				if ((this._DisclosureStatus != value))
				{
					this.OnDisclosureStatusChanging(value);
					this.SendPropertyChanging();
					this._DisclosureStatus = value;
					this.SendPropertyChanged("DisclosureStatus");
					this.OnDisclosureStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LeadStatus
		{
			get
			{
				return this._LeadStatus;
			}
			set
			{
				if ((this._LeadStatus != value))
				{
					this.OnLeadStatusChanging(value);
					this.SendPropertyChanging();
					this._LeadStatus = value;
					this.SendPropertyChanged("LeadStatus");
					this.OnLeadStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDelivery", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DocDelivery
		{
			get
			{
				return this._DocDelivery;
			}
			set
			{
				if ((this._DocDelivery != value))
				{
					this.OnDocDeliveryChanging(value);
					this.SendPropertyChanging();
					this._DocDelivery = value;
					this.SendPropertyChanged("DocDelivery");
					this.OnDocDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncompassBorrowerPairId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EncompassBorrowerPairId
		{
			get
			{
				return this._EncompassBorrowerPairId;
			}
			set
			{
				if ((this._EncompassBorrowerPairId != value))
				{
					this.OnEncompassBorrowerPairIdChanging(value);
					this.SendPropertyChanging();
					this._EncompassBorrowerPairId = value;
					this.SendPropertyChanged("EncompassBorrowerPairId");
					this.OnEncompassBorrowerPairIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SnoozeOrder
		{
			get
			{
				return this._SnoozeOrder;
			}
			set
			{
				if ((this._SnoozeOrder != value))
				{
					this.OnSnoozeOrderChanging(value);
					this.SendPropertyChanging();
					this._SnoozeOrder = value;
					this.SendPropertyChanged("SnoozeOrder");
					this.OnSnoozeOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMilestoneStatusManual", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsMilestoneStatusManual
		{
			get
			{
				return this._IsMilestoneStatusManual;
			}
			set
			{
				if ((this._IsMilestoneStatusManual != value))
				{
					this.OnIsMilestoneStatusManualChanging(value);
					this.SendPropertyChanging();
					this._IsMilestoneStatusManual = value;
					this.SendPropertyChanged("IsMilestoneStatusManual");
					this.OnIsMilestoneStatusManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAggregateAdjustment", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalAggregateAdjustment
		{
			get
			{
				return this._TotalAggregateAdjustment;
			}
			set
			{
				if ((this._TotalAggregateAdjustment != value))
				{
					this.OnTotalAggregateAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._TotalAggregateAdjustment = value;
					this.SendPropertyChanged("TotalAggregateAdjustment");
					this.OnTotalAggregateAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NtbRequired", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NtbRequired
		{
			get
			{
				return this._NtbRequired;
			}
			set
			{
				if ((this._NtbRequired != value))
				{
					this.OnNtbRequiredChanging(value);
					this.SendPropertyChanging();
					this._NtbRequired = value;
					this.SendPropertyChanged("NtbRequired");
					this.OnNtbRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegativeAmortization", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NegativeAmortization
		{
			get
			{
				return this._NegativeAmortization;
			}
			set
			{
				if ((this._NegativeAmortization != value))
				{
					this.OnNegativeAmortizationChanging(value);
					this.SendPropertyChanging();
					this._NegativeAmortization = value;
					this.SendPropertyChanged("NegativeAmortization");
					this.OnNegativeAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrePaymentPenalty", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PrePaymentPenalty
		{
			get
			{
				return this._PrePaymentPenalty;
			}
			set
			{
				if ((this._PrePaymentPenalty != value))
				{
					this.OnPrePaymentPenaltyChanging(value);
					this.SendPropertyChanging();
					this._PrePaymentPenalty = value;
					this.SendPropertyChanged("PrePaymentPenalty");
					this.OnPrePaymentPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrePaymentAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PrePaymentAmount
		{
			get
			{
				return this._PrePaymentAmount;
			}
			set
			{
				if ((this._PrePaymentAmount != value))
				{
					this.OnPrePaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PrePaymentAmount = value;
					this.SendPropertyChanged("PrePaymentAmount");
					this.OnPrePaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonaFidePersonalReasonId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BonaFidePersonalReasonId
		{
			get
			{
				return this._BonaFidePersonalReasonId;
			}
			set
			{
				if ((this._BonaFidePersonalReasonId != value))
				{
					this.OnBonaFidePersonalReasonIdChanging(value);
					this.SendPropertyChanging();
					this._BonaFidePersonalReasonId = value;
					this.SendPropertyChanged("BonaFidePersonalReasonId");
					this.OnBonaFidePersonalReasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplianceCheckStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComplianceCheckStatus
		{
			get
			{
				return this._ComplianceCheckStatus;
			}
			set
			{
				if ((this._ComplianceCheckStatus != value))
				{
					this.OnComplianceCheckStatusChanging(value);
					this.SendPropertyChanging();
					this._ComplianceCheckStatus = value;
					this.SendPropertyChanged("ComplianceCheckStatus");
					this.OnComplianceCheckStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesManagerId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SalesManagerId
		{
			get
			{
				return this._SalesManagerId;
			}
			set
			{
				if ((this._SalesManagerId != value))
				{
					this.OnSalesManagerIdChanging(value);
					this.SendPropertyChanging();
					this._SalesManagerId = value;
					this.SendPropertyChanged("SalesManagerId");
					this.OnSalesManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamLeaderId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TeamLeaderId
		{
			get
			{
				return this._TeamLeaderId;
			}
			set
			{
				if ((this._TeamLeaderId != value))
				{
					this.OnTeamLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._TeamLeaderId = value;
					this.SendPropertyChanged("TeamLeaderId");
					this.OnTeamLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovermentEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> GovermentEligibility
		{
			get
			{
				return this._GovermentEligibility;
			}
			set
			{
				if ((this._GovermentEligibility != value))
				{
					this.OnGovermentEligibilityChanging(value);
					this.SendPropertyChanging();
					this._GovermentEligibility = value;
					this.SendPropertyChanged("GovermentEligibility");
					this.OnGovermentEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAuthorizationAcceptedBy", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string CreditAuthorizationAcceptedBy
		{
			get
			{
				return this._CreditAuthorizationAcceptedBy;
			}
			set
			{
				if ((this._CreditAuthorizationAcceptedBy != value))
				{
					this.OnCreditAuthorizationAcceptedByChanging(value);
					this.SendPropertyChanging();
					this._CreditAuthorizationAcceptedBy = value;
					this.SendPropertyChanged("CreditAuthorizationAcceptedBy");
					this.OnCreditAuthorizationAcceptedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDAModerateIncomeLimit", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> USDAModerateIncomeLimit
		{
			get
			{
				return this._USDAModerateIncomeLimit;
			}
			set
			{
				if ((this._USDAModerateIncomeLimit != value))
				{
					this.OnUSDAModerateIncomeLimitChanging(value);
					this.SendPropertyChanging();
					this._USDAModerateIncomeLimit = value;
					this.SendPropertyChanged("USDAModerateIncomeLimit");
					this.OnUSDAModerateIncomeLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeVerificationType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IncomeVerificationType
		{
			get
			{
				return this._IncomeVerificationType;
			}
			set
			{
				if ((this._IncomeVerificationType != value))
				{
					this.OnIncomeVerificationTypeChanging(value);
					this.SendPropertyChanging();
					this._IncomeVerificationType = value;
					this.SendPropertyChanged("IncomeVerificationType");
					this.OnIncomeVerificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWorkflowState", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CurrentWorkflowState
		{
			get
			{
				return this._CurrentWorkflowState;
			}
			set
			{
				if ((this._CurrentWorkflowState != value))
				{
					this.OnCurrentWorkflowStateChanging(value);
					this.SendPropertyChanging();
					this._CurrentWorkflowState = value;
					this.SendPropertyChanged("CurrentWorkflowState");
					this.OnCurrentWorkflowStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonTraditionalCreditType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NonTraditionalCreditType
		{
			get
			{
				return this._NonTraditionalCreditType;
			}
			set
			{
				if ((this._NonTraditionalCreditType != value))
				{
					this.OnNonTraditionalCreditTypeChanging(value);
					this.SendPropertyChanging();
					this._NonTraditionalCreditType = value;
					this.SendPropertyChanged("NonTraditionalCreditType");
					this.OnNonTraditionalCreditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeOfRefinance", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PurposeOfRefinance
		{
			get
			{
				return this._PurposeOfRefinance;
			}
			set
			{
				if ((this._PurposeOfRefinance != value))
				{
					this.OnPurposeOfRefinanceChanging(value);
					this.SendPropertyChanging();
					this._PurposeOfRefinance = value;
					this.SendPropertyChanged("PurposeOfRefinance");
					this.OnPurposeOfRefinanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirstTimeHomebuyer", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsFirstTimeHomebuyer
		{
			get
			{
				return this._IsFirstTimeHomebuyer;
			}
			set
			{
				if ((this._IsFirstTimeHomebuyer != value))
				{
					this.OnIsFirstTimeHomebuyerChanging(value);
					this.SendPropertyChanging();
					this._IsFirstTimeHomebuyer = value;
					this.SendPropertyChanged("IsFirstTimeHomebuyer");
					this.OnIsFirstTimeHomebuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockCode", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string LockCode
		{
			get
			{
				return this._LockCode;
			}
			set
			{
				if ((this._LockCode != value))
				{
					this.OnLockCodeChanging(value);
					this.SendPropertyChanging();
					this._LockCode = value;
					this.SendPropertyChanged("LockCode");
					this.OnLockCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCard", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RateCard
		{
			get
			{
				return this._RateCard;
			}
			set
			{
				if ((this._RateCard != value))
				{
					this.OnRateCardChanging(value);
					this.SendPropertyChanging();
					this._RateCard = value;
					this.SendPropertyChanged("RateCard");
					this.OnRateCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditReportFee", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CreditReportFee
		{
			get
			{
				return this._CreditReportFee;
			}
			set
			{
				if ((this._CreditReportFee != value))
				{
					this.OnCreditReportFeeChanging(value);
					this.SendPropertyChanging();
					this._CreditReportFee = value;
					this.SendPropertyChanged("CreditReportFee");
					this.OnCreditReportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerFirstName", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string PartnerFirstName
		{
			get
			{
				return this._PartnerFirstName;
			}
			set
			{
				if ((this._PartnerFirstName != value))
				{
					this.OnPartnerFirstNameChanging(value);
					this.SendPropertyChanging();
					this._PartnerFirstName = value;
					this.SendPropertyChanged("PartnerFirstName");
					this.OnPartnerFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerLastName", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string PartnerLastName
		{
			get
			{
				return this._PartnerLastName;
			}
			set
			{
				if ((this._PartnerLastName != value))
				{
					this.OnPartnerLastNameChanging(value);
					this.SendPropertyChanging();
					this._PartnerLastName = value;
					this.SendPropertyChanged("PartnerLastName");
					this.OnPartnerLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoFinancedProperties", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoFinancedProperties
		{
			get
			{
				return this._NoFinancedProperties;
			}
			set
			{
				if ((this._NoFinancedProperties != value))
				{
					this.OnNoFinancedPropertiesChanging(value);
					this.SendPropertyChanging();
					this._NoFinancedProperties = value;
					this.SendPropertyChanged("NoFinancedProperties");
					this.OnNoFinancedPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicingIndicator", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ServicingIndicator
		{
			get
			{
				return this._ServicingIndicator;
			}
			set
			{
				if ((this._ServicingIndicator != value))
				{
					this.OnServicingIndicatorChanging(value);
					this.SendPropertyChanging();
					this._ServicingIndicator = value;
					this.SendPropertyChanged("ServicingIndicator");
					this.OnServicingIndicatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductClassification", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProductClassification
		{
			get
			{
				return this._ProductClassification;
			}
			set
			{
				if ((this._ProductClassification != value))
				{
					this.OnProductClassificationChanging(value);
					this.SendPropertyChanging();
					this._ProductClassification = value;
					this.SendPropertyChanged("ProductClassification");
					this.OnProductClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOSExportStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LOSExportStatus
		{
			get
			{
				return this._LOSExportStatus;
			}
			set
			{
				if ((this._LOSExportStatus != value))
				{
					this.OnLOSExportStatusChanging(value);
					this.SendPropertyChanging();
					this._LOSExportStatus = value;
					this.SendPropertyChanged("LOSExportStatus");
					this.OnLOSExportStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOSExportStatusExpire", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LOSExportStatusExpire
		{
			get
			{
				return this._LOSExportStatusExpire;
			}
			set
			{
				if ((this._LOSExportStatusExpire != value))
				{
					this.OnLOSExportStatusExpireChanging(value);
					this.SendPropertyChanging();
					this._LOSExportStatusExpire = value;
					this.SendPropertyChanged("LOSExportStatusExpire");
					this.OnLOSExportStatusExpireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCalc", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> FeeCalc
		{
			get
			{
				return this._FeeCalc;
			}
			set
			{
				if ((this._FeeCalc != value))
				{
					this.OnFeeCalcChanging(value);
					this.SendPropertyChanging();
					this._FeeCalc = value;
					this.SendPropertyChanged("FeeCalc");
					this.OnFeeCalcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExportedToEncompass", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsExportedToEncompass
		{
			get
			{
				return this._IsExportedToEncompass;
			}
			set
			{
				if ((this._IsExportedToEncompass != value))
				{
					this.OnIsExportedToEncompassChanging(value);
					this.SendPropertyChanging();
					this._IsExportedToEncompass = value;
					this.SendPropertyChanged("IsExportedToEncompass");
					this.OnIsExportedToEncompassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestOnly", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> InterestOnly
		{
			get
			{
				return this._InterestOnly;
			}
			set
			{
				if ((this._InterestOnly != value))
				{
					this.OnInterestOnlyChanging(value);
					this.SendPropertyChanging();
					this._InterestOnly = value;
					this.SendPropertyChanged("InterestOnly");
					this.OnInterestOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestOnlyTermMonths", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> InterestOnlyTermMonths
		{
			get
			{
				return this._InterestOnlyTermMonths;
			}
			set
			{
				if ((this._InterestOnlyTermMonths != value))
				{
					this.OnInterestOnlyTermMonthsChanging(value);
					this.SendPropertyChanging();
					this._InterestOnlyTermMonths = value;
					this.SendPropertyChanged("InterestOnlyTermMonths");
					this.OnInterestOnlyTermMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeMIforLTVUnder", DbType="Decimal(3,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ExcludeMIforLTVUnder
		{
			get
			{
				return this._ExcludeMIforLTVUnder;
			}
			set
			{
				if ((this._ExcludeMIforLTVUnder != value))
				{
					this.OnExcludeMIforLTVUnderChanging(value);
					this.SendPropertyChanging();
					this._ExcludeMIforLTVUnder = value;
					this.SendPropertyChanged("ExcludeMIforLTVUnder");
					this.OnExcludeMIforLTVUnderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPricingFicoOverridden", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsPricingFicoOverridden
		{
			get
			{
				return this._IsPricingFicoOverridden;
			}
			set
			{
				if ((this._IsPricingFicoOverridden != value))
				{
					this.OnIsPricingFicoOverriddenChanging(value);
					this.SendPropertyChanging();
					this._IsPricingFicoOverridden = value;
					this.SendPropertyChanged("IsPricingFicoOverridden");
					this.OnIsPricingFicoOverriddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanChannelType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LoanChannelType
		{
			get
			{
				return this._LoanChannelType;
			}
			set
			{
				if ((this._LoanChannelType != value))
				{
					this.OnLoanChannelTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanChannelType = value;
					this.SendPropertyChanged("LoanChannelType");
					this.OnLoanChannelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanBalanceType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LoanBalanceType
		{
			get
			{
				return this._LoanBalanceType;
			}
			set
			{
				if ((this._LoanBalanceType != value))
				{
					this.OnLoanBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanBalanceType = value;
					this.SendPropertyChanged("LoanBalanceType");
					this.OnLoanBalanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustDiscloseInIMP", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> MustDiscloseInIMP
		{
			get
			{
				return this._MustDiscloseInIMP;
			}
			set
			{
				if ((this._MustDiscloseInIMP != value))
				{
					this.OnMustDiscloseInIMPChanging(value);
					this.SendPropertyChanging();
					this._MustDiscloseInIMP = value;
					this.SendPropertyChanged("MustDiscloseInIMP");
					this.OnMustDiscloseInIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LenderLoanNumber", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LenderLoanNumber
		{
			get
			{
				return this._LenderLoanNumber;
			}
			set
			{
				if ((this._LenderLoanNumber != value))
				{
					this.OnLenderLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LenderLoanNumber = value;
					this.SendPropertyChanged("LenderLoanNumber");
					this.OnLenderLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitmentNumber", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CommitmentNumber
		{
			get
			{
				return this._CommitmentNumber;
			}
			set
			{
				if ((this._CommitmentNumber != value))
				{
					this.OnCommitmentNumberChanging(value);
					this.SendPropertyChanging();
					this._CommitmentNumber = value;
					this.SendPropertyChanged("CommitmentNumber");
					this.OnCommitmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoDiscloseTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AutoDiscloseTime
		{
			get
			{
				return this._AutoDiscloseTime;
			}
			set
			{
				if ((this._AutoDiscloseTime != value))
				{
					this.OnAutoDiscloseTimeChanging(value);
					this.SendPropertyChanging();
					this._AutoDiscloseTime = value;
					this.SendPropertyChanged("AutoDiscloseTime");
					this.OnAutoDiscloseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTitleChangedDueToRefi", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsTitleChangedDueToRefi
		{
			get
			{
				return this._IsTitleChangedDueToRefi;
			}
			set
			{
				if ((this._IsTitleChangedDueToRefi != value))
				{
					this.OnIsTitleChangedDueToRefiChanging(value);
					this.SendPropertyChanging();
					this._IsTitleChangedDueToRefi = value;
					this.SendPropertyChanged("IsTitleChangedDueToRefi");
					this.OnIsTitleChangedDueToRefiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleRefiChanges", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string TitleRefiChanges
		{
			get
			{
				return this._TitleRefiChanges;
			}
			set
			{
				if ((this._TitleRefiChanges != value))
				{
					this.OnTitleRefiChangesChanging(value);
					this.SendPropertyChanging();
					this._TitleRefiChanges = value;
					this.SendPropertyChanged("TitleRefiChanges");
					this.OnTitleRefiChangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetVerification", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AssetVerification
		{
			get
			{
				return this._AssetVerification;
			}
			set
			{
				if ((this._AssetVerification != value))
				{
					this.OnAssetVerificationChanging(value);
					this.SendPropertyChanging();
					this._AssetVerification = value;
					this.SendPropertyChanged("AssetVerification");
					this.OnAssetVerificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIdentifier", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ProductIdentifier
		{
			get
			{
				return this._ProductIdentifier;
			}
			set
			{
				if ((this._ProductIdentifier != value))
				{
					this.OnProductIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ProductIdentifier = value;
					this.SendPropertyChanged("ProductIdentifier");
					this.OnProductIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeOfRefinanceLoan", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PurposeOfRefinanceLoan
		{
			get
			{
				return this._PurposeOfRefinanceLoan;
			}
			set
			{
				if ((this._PurposeOfRefinanceLoan != value))
				{
					this.OnPurposeOfRefinanceLoanChanging(value);
					this.SendPropertyChanging();
					this._PurposeOfRefinanceLoan = value;
					this.SendPropertyChanged("PurposeOfRefinanceLoan");
					this.OnPurposeOfRefinanceLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalLOSUpdateStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ExternalLOSUpdateStatus
		{
			get
			{
				return this._ExternalLOSUpdateStatus;
			}
			set
			{
				if ((this._ExternalLOSUpdateStatus != value))
				{
					this.OnExternalLOSUpdateStatusChanging(value);
					this.SendPropertyChanging();
					this._ExternalLOSUpdateStatus = value;
					this.SendPropertyChanged("ExternalLOSUpdateStatus");
					this.OnExternalLOSUpdateStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAUpdatePriceFeesEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> VAUpdatePriceFeesEnabled
		{
			get
			{
				return this._VAUpdatePriceFeesEnabled;
			}
			set
			{
				if ((this._VAUpdatePriceFeesEnabled != value))
				{
					this.OnVAUpdatePriceFeesEnabledChanging(value);
					this.SendPropertyChanging();
					this._VAUpdatePriceFeesEnabled = value;
					this.SendPropertyChanged("VAUpdatePriceFeesEnabled");
					this.OnVAUpdatePriceFeesEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIRateQuoteId", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string MIRateQuoteId
		{
			get
			{
				return this._MIRateQuoteId;
			}
			set
			{
				if ((this._MIRateQuoteId != value))
				{
					this.OnMIRateQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._MIRateQuoteId = value;
					this.SendPropertyChanged("MIRateQuoteId");
					this.OnMIRateQuoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorRate", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InvestorRate
		{
			get
			{
				return this._InvestorRate;
			}
			set
			{
				if ((this._InvestorRate != value))
				{
					this.OnInvestorRateChanging(value);
					this.SendPropertyChanging();
					this._InvestorRate = value;
					this.SendPropertyChanged("InvestorRate");
					this.OnInvestorRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseRate", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnterpriseRate
		{
			get
			{
				return this._EnterpriseRate;
			}
			set
			{
				if ((this._EnterpriseRate != value))
				{
					this.OnEnterpriseRateChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseRate = value;
					this.SendPropertyChanged("EnterpriseRate");
					this.OnEnterpriseRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanOfficerRate", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanOfficerRate
		{
			get
			{
				return this._LoanOfficerRate;
			}
			set
			{
				if ((this._LoanOfficerRate != value))
				{
					this.OnLoanOfficerRateChanging(value);
					this.SendPropertyChanging();
					this._LoanOfficerRate = value;
					this.SendPropertyChanged("LoanOfficerRate");
					this.OnLoanOfficerRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalLoanOfficerRate", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FinalLoanOfficerRate
		{
			get
			{
				return this._FinalLoanOfficerRate;
			}
			set
			{
				if ((this._FinalLoanOfficerRate != value))
				{
					this.OnFinalLoanOfficerRateChanging(value);
					this.SendPropertyChanging();
					this._FinalLoanOfficerRate = value;
					this.SendPropertyChanged("FinalLoanOfficerRate");
					this.OnFinalLoanOfficerRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorMargin", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InvestorMargin
		{
			get
			{
				return this._InvestorMargin;
			}
			set
			{
				if ((this._InvestorMargin != value))
				{
					this.OnInvestorMarginChanging(value);
					this.SendPropertyChanging();
					this._InvestorMargin = value;
					this.SendPropertyChanged("InvestorMargin");
					this.OnInvestorMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanOfficerMargin", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanOfficerMargin
		{
			get
			{
				return this._LoanOfficerMargin;
			}
			set
			{
				if ((this._LoanOfficerMargin != value))
				{
					this.OnLoanOfficerMarginChanging(value);
					this.SendPropertyChanging();
					this._LoanOfficerMargin = value;
					this.SendPropertyChanged("LoanOfficerMargin");
					this.OnLoanOfficerMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalLoanOfficerMargin", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FinalLoanOfficerMargin
		{
			get
			{
				return this._FinalLoanOfficerMargin;
			}
			set
			{
				if ((this._FinalLoanOfficerMargin != value))
				{
					this.OnFinalLoanOfficerMarginChanging(value);
					this.SendPropertyChanging();
					this._FinalLoanOfficerMargin = value;
					this.SendPropertyChanged("FinalLoanOfficerMargin");
					this.OnFinalLoanOfficerMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseMargin", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnterpriseMargin
		{
			get
			{
				return this._EnterpriseMargin;
			}
			set
			{
				if ((this._EnterpriseMargin != value))
				{
					this.OnEnterpriseMarginChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseMargin = value;
					this.SendPropertyChanged("EnterpriseMargin");
					this.OnEnterpriseMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreAllBorrowersOnLoanBorrowerEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AreAllBorrowersOnLoanBorrowerEligibility
		{
			get
			{
				return this._AreAllBorrowersOnLoanBorrowerEligibility;
			}
			set
			{
				if ((this._AreAllBorrowersOnLoanBorrowerEligibility != value))
				{
					this.OnAreAllBorrowersOnLoanBorrowerEligibilityChanging(value);
					this.SendPropertyChanging();
					this._AreAllBorrowersOnLoanBorrowerEligibility = value;
					this.SendPropertyChanged("AreAllBorrowersOnLoanBorrowerEligibility");
					this.OnAreAllBorrowersOnLoanBorrowerEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePyamentOnMortgageNonCreditQualPaymentEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LatePyamentOnMortgageNonCreditQualPaymentEligibility
		{
			get
			{
				return this._LatePyamentOnMortgageNonCreditQualPaymentEligibility;
			}
			set
			{
				if ((this._LatePyamentOnMortgageNonCreditQualPaymentEligibility != value))
				{
					this.OnLatePyamentOnMortgageNonCreditQualPaymentEligibilityChanging(value);
					this.SendPropertyChanging();
					this._LatePyamentOnMortgageNonCreditQualPaymentEligibility = value;
					this.SendPropertyChanged("LatePyamentOnMortgageNonCreditQualPaymentEligibility");
					this.OnLatePyamentOnMortgageNonCreditQualPaymentEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility
		{
			get
			{
				return this._LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility;
			}
			set
			{
				if ((this._LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility != value))
				{
					this.OnLatePyamentOnSubjectPropertyNonCreditQualPaymentEligibilityChanging(value);
					this.SendPropertyChanging();
					this._LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility = value;
					this.SendPropertyChanged("LatePyamentOnSubjectPropertyNonCreditQualPaymentEligibility");
					this.OnLatePyamentOnSubjectPropertyNonCreditQualPaymentEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePyamentOnMortgageCreditQualPaymentEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LatePyamentOnMortgageCreditQualPaymentEligibility
		{
			get
			{
				return this._LatePyamentOnMortgageCreditQualPaymentEligibility;
			}
			set
			{
				if ((this._LatePyamentOnMortgageCreditQualPaymentEligibility != value))
				{
					this.OnLatePyamentOnMortgageCreditQualPaymentEligibilityChanging(value);
					this.SendPropertyChanging();
					this._LatePyamentOnMortgageCreditQualPaymentEligibility = value;
					this.SendPropertyChanged("LatePyamentOnMortgageCreditQualPaymentEligibility");
					this.OnLatePyamentOnMortgageCreditQualPaymentEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePyamentOnSubjectPropertyCreditQualPaymentEligibility", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LatePyamentOnSubjectPropertyCreditQualPaymentEligibility
		{
			get
			{
				return this._LatePyamentOnSubjectPropertyCreditQualPaymentEligibility;
			}
			set
			{
				if ((this._LatePyamentOnSubjectPropertyCreditQualPaymentEligibility != value))
				{
					this.OnLatePyamentOnSubjectPropertyCreditQualPaymentEligibilityChanging(value);
					this.SendPropertyChanging();
					this._LatePyamentOnSubjectPropertyCreditQualPaymentEligibility = value;
					this.SendPropertyChanged("LatePyamentOnSubjectPropertyCreditQualPaymentEligibility");
					this.OnLatePyamentOnSubjectPropertyCreditQualPaymentEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WillNewLoanHaveSameBorrowers", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> WillNewLoanHaveSameBorrowers
		{
			get
			{
				return this._WillNewLoanHaveSameBorrowers;
			}
			set
			{
				if ((this._WillNewLoanHaveSameBorrowers != value))
				{
					this.OnWillNewLoanHaveSameBorrowersChanging(value);
					this.SendPropertyChanging();
					this._WillNewLoanHaveSameBorrowers = value;
					this.SendPropertyChanged("WillNewLoanHaveSameBorrowers");
					this.OnWillNewLoanHaveSameBorrowersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAUS", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DefaultAUS
		{
			get
			{
				return this._DefaultAUS;
			}
			set
			{
				if ((this._DefaultAUS != value))
				{
					this.OnDefaultAUSChanging(value);
					this.SendPropertyChanging();
					this._DefaultAUS = value;
					this.SendPropertyChanged("DefaultAUS");
					this.OnDefaultAUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreamlinePaymentEligibility1", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StreamlinePaymentEligibility1
		{
			get
			{
				return this._StreamlinePaymentEligibility1;
			}
			set
			{
				if ((this._StreamlinePaymentEligibility1 != value))
				{
					this.OnStreamlinePaymentEligibility1Changing(value);
					this.SendPropertyChanging();
					this._StreamlinePaymentEligibility1 = value;
					this.SendPropertyChanged("StreamlinePaymentEligibility1");
					this.OnStreamlinePaymentEligibility1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreamlinePaymentEligibility2", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> StreamlinePaymentEligibility2
		{
			get
			{
				return this._StreamlinePaymentEligibility2;
			}
			set
			{
				if ((this._StreamlinePaymentEligibility2 != value))
				{
					this.OnStreamlinePaymentEligibility2Changing(value);
					this.SendPropertyChanging();
					this._StreamlinePaymentEligibility2 = value;
					this.SendPropertyChanged("StreamlinePaymentEligibility2");
					this.OnStreamlinePaymentEligibility2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Has2ndMortgage", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Has2ndMortgage
		{
			get
			{
				return this._Has2ndMortgage;
			}
			set
			{
				if ((this._Has2ndMortgage != value))
				{
					this.OnHas2ndMortgageChanging(value);
					this.SendPropertyChanging();
					this._Has2ndMortgage = value;
					this.SendPropertyChanged("Has2ndMortgage");
					this.OnHas2ndMortgageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoanARM", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsLoanARM
		{
			get
			{
				return this._IsLoanARM;
			}
			set
			{
				if ((this._IsLoanARM != value))
				{
					this.OnIsLoanARMChanging(value);
					this.SendPropertyChanging();
					this._IsLoanARM = value;
					this.SendPropertyChanged("IsLoanARM");
					this.OnIsLoanARMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARMLoanMonthsBeforeNextPaymentType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ARMLoanMonthsBeforeNextPaymentType
		{
			get
			{
				return this._ARMLoanMonthsBeforeNextPaymentType;
			}
			set
			{
				if ((this._ARMLoanMonthsBeforeNextPaymentType != value))
				{
					this.OnARMLoanMonthsBeforeNextPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._ARMLoanMonthsBeforeNextPaymentType = value;
					this.SendPropertyChanged("ARMLoanMonthsBeforeNextPaymentType");
					this.OnARMLoanMonthsBeforeNextPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_AuditLog", Storage="_AuditLogs", ThisKey="LoanId", OtherKey="LoanId")]
		public EntitySet<AuditLog> AuditLogs
		{
			get
			{
				return this._AuditLogs;
			}
			set
			{
				this._AuditLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuditLogs(AuditLog entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_AuditLogs(AuditLog entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLog")]
	public partial class AuditLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AuditId;
		
		private System.DateTime _TimeStamp;
		
		private string _Title;
		
		private string _Message;
		
		private int _Type;
		
		private int _UserAccountId;
		
		private System.Nullable<System.Guid> _LoanId;
		
		private int _Category;
		
		private int _Level;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditIdChanging(System.Guid value);
    partial void OnAuditIdChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUserAccountIdChanging(int value);
    partial void OnUserAccountIdChanged();
    partial void OnLoanIdChanging(System.Nullable<System.Guid> value);
    partial void OnLoanIdChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    #endregion
		
		public AuditLog()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AuditId
		{
			get
			{
				return this._AuditId;
			}
			set
			{
				if ((this._AuditId != value))
				{
					this.OnAuditIdChanging(value);
					this.SendPropertyChanging();
					this._AuditId = value;
					this.SendPropertyChanged("AuditId");
					this.OnAuditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", DbType="Int NOT NULL")]
		public int UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_AuditLog", Storage="_Loan", ThisKey="LoanId", OtherKey="LoanId", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.AuditLogs.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.AuditLogs.Add(this);
						this._LoanId = value.LoanId;
					}
					else
					{
						this._LoanId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationStatus")]
	public partial class IntegrationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IntegrationStatusID;
		
		private System.Guid _LoanId;
		
		private int _ProductID;
		
		private int _VendorID;
		
		private int _IntegrationStatusTypeID;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _StatusChangedAt;
		
		private string _StatusMessage;
		
		private string _iMPTransactionID;
		
		private string _VendorTransactionID;
		
		private EntitySet<IntegrationStatusDetail> _IntegrationStatusDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationStatusIDChanging(long value);
    partial void OnIntegrationStatusIDChanged();
    partial void OnLoanIdChanging(System.Guid value);
    partial void OnLoanIdChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnIntegrationStatusTypeIDChanging(int value);
    partial void OnIntegrationStatusTypeIDChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnStatusChangedAtChanging(System.DateTime value);
    partial void OnStatusChangedAtChanged();
    partial void OnStatusMessageChanging(string value);
    partial void OnStatusMessageChanged();
    partial void OniMPTransactionIDChanging(string value);
    partial void OniMPTransactionIDChanged();
    partial void OnVendorTransactionIDChanging(string value);
    partial void OnVendorTransactionIDChanged();
    #endregion
		
		public IntegrationStatus()
		{
			this._IntegrationStatusDetails = new EntitySet<IntegrationStatusDetail>(new Action<IntegrationStatusDetail>(this.attach_IntegrationStatusDetails), new Action<IntegrationStatusDetail>(this.detach_IntegrationStatusDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationStatusID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IntegrationStatusID
		{
			get
			{
				return this._IntegrationStatusID;
			}
			set
			{
				if ((this._IntegrationStatusID != value))
				{
					this.OnIntegrationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._IntegrationStatusID = value;
					this.SendPropertyChanged("IntegrationStatusID");
					this.OnIntegrationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int NOT NULL")]
		public int VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationStatusTypeID", DbType="Int NOT NULL")]
		public int IntegrationStatusTypeID
		{
			get
			{
				return this._IntegrationStatusTypeID;
			}
			set
			{
				if ((this._IntegrationStatusTypeID != value))
				{
					this.OnIntegrationStatusTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IntegrationStatusTypeID = value;
					this.SendPropertyChanged("IntegrationStatusTypeID");
					this.OnIntegrationStatusTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusChangedAt", DbType="DateTime NOT NULL")]
		public System.DateTime StatusChangedAt
		{
			get
			{
				return this._StatusChangedAt;
			}
			set
			{
				if ((this._StatusChangedAt != value))
				{
					this.OnStatusChangedAtChanging(value);
					this.SendPropertyChanging();
					this._StatusChangedAt = value;
					this.SendPropertyChanged("StatusChangedAt");
					this.OnStatusChangedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMessage", DbType="VarChar(4096)")]
		public string StatusMessage
		{
			get
			{
				return this._StatusMessage;
			}
			set
			{
				if ((this._StatusMessage != value))
				{
					this.OnStatusMessageChanging(value);
					this.SendPropertyChanging();
					this._StatusMessage = value;
					this.SendPropertyChanged("StatusMessage");
					this.OnStatusMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMPTransactionID", DbType="VarChar(1024)")]
		public string iMPTransactionID
		{
			get
			{
				return this._iMPTransactionID;
			}
			set
			{
				if ((this._iMPTransactionID != value))
				{
					this.OniMPTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._iMPTransactionID = value;
					this.SendPropertyChanged("iMPTransactionID");
					this.OniMPTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorTransactionID", DbType="VarChar(1024)")]
		public string VendorTransactionID
		{
			get
			{
				return this._VendorTransactionID;
			}
			set
			{
				if ((this._VendorTransactionID != value))
				{
					this.OnVendorTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._VendorTransactionID = value;
					this.SendPropertyChanged("VendorTransactionID");
					this.OnVendorTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationStatus_IntegrationStatusDetail", Storage="_IntegrationStatusDetails", ThisKey="IntegrationStatusID", OtherKey="IntegrationStatusID")]
		public EntitySet<IntegrationStatusDetail> IntegrationStatusDetails
		{
			get
			{
				return this._IntegrationStatusDetails;
			}
			set
			{
				this._IntegrationStatusDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegrationStatusDetails(IntegrationStatusDetail entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationStatus = this;
		}
		
		private void detach_IntegrationStatusDetails(IntegrationStatusDetail entity)
		{
			this.SendPropertyChanging();
			entity.IntegrationStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntegrationStatusDetail")]
	public partial class IntegrationStatusDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IntegrationStatusDetailID;
		
		private long _IntegrationStatusID;
		
		private int _IntegrationStatusDetailTypeID;
		
		private int _StatusDetailStateTypeID;
		
		private string _Code;
		
		private string _Message;
		
		private int _MessageMediaTypeId;
		
		private System.DateTime _CreatedAt;
		
		private EntityRef<IntegrationStatus> _IntegrationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationStatusDetailIDChanging(long value);
    partial void OnIntegrationStatusDetailIDChanged();
    partial void OnIntegrationStatusIDChanging(long value);
    partial void OnIntegrationStatusIDChanged();
    partial void OnIntegrationStatusDetailTypeIDChanging(int value);
    partial void OnIntegrationStatusDetailTypeIDChanged();
    partial void OnStatusDetailStateTypeIDChanging(int value);
    partial void OnStatusDetailStateTypeIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnMessageMediaTypeIdChanging(int value);
    partial void OnMessageMediaTypeIdChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public IntegrationStatusDetail()
		{
			this._IntegrationStatus = default(EntityRef<IntegrationStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationStatusDetailID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IntegrationStatusDetailID
		{
			get
			{
				return this._IntegrationStatusDetailID;
			}
			set
			{
				if ((this._IntegrationStatusDetailID != value))
				{
					this.OnIntegrationStatusDetailIDChanging(value);
					this.SendPropertyChanging();
					this._IntegrationStatusDetailID = value;
					this.SendPropertyChanged("IntegrationStatusDetailID");
					this.OnIntegrationStatusDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationStatusID", DbType="BigInt NOT NULL")]
		public long IntegrationStatusID
		{
			get
			{
				return this._IntegrationStatusID;
			}
			set
			{
				if ((this._IntegrationStatusID != value))
				{
					if (this._IntegrationStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._IntegrationStatusID = value;
					this.SendPropertyChanged("IntegrationStatusID");
					this.OnIntegrationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationStatusDetailTypeID", DbType="Int NOT NULL")]
		public int IntegrationStatusDetailTypeID
		{
			get
			{
				return this._IntegrationStatusDetailTypeID;
			}
			set
			{
				if ((this._IntegrationStatusDetailTypeID != value))
				{
					this.OnIntegrationStatusDetailTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IntegrationStatusDetailTypeID = value;
					this.SendPropertyChanged("IntegrationStatusDetailTypeID");
					this.OnIntegrationStatusDetailTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDetailStateTypeID", DbType="Int NOT NULL")]
		public int StatusDetailStateTypeID
		{
			get
			{
				return this._StatusDetailStateTypeID;
			}
			set
			{
				if ((this._StatusDetailStateTypeID != value))
				{
					this.OnStatusDetailStateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._StatusDetailStateTypeID = value;
					this.SendPropertyChanged("StatusDetailStateTypeID");
					this.OnStatusDetailStateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageMediaTypeId", DbType="Int NOT NULL")]
		public int MessageMediaTypeId
		{
			get
			{
				return this._MessageMediaTypeId;
			}
			set
			{
				if ((this._MessageMediaTypeId != value))
				{
					this.OnMessageMediaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MessageMediaTypeId = value;
					this.SendPropertyChanged("MessageMediaTypeId");
					this.OnMessageMediaTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntegrationStatus_IntegrationStatusDetail", Storage="_IntegrationStatus", ThisKey="IntegrationStatusID", OtherKey="IntegrationStatusID", IsForeignKey=true)]
		public IntegrationStatus IntegrationStatus
		{
			get
			{
				return this._IntegrationStatus.Entity;
			}
			set
			{
				IntegrationStatus previousValue = this._IntegrationStatus.Entity;
				if (((previousValue != value) 
							|| (this._IntegrationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntegrationStatus.Entity = null;
						previousValue.IntegrationStatusDetails.Remove(this);
					}
					this._IntegrationStatus.Entity = value;
					if ((value != null))
					{
						value.IntegrationStatusDetails.Add(this);
						this._IntegrationStatusID = value.IntegrationStatusID;
					}
					else
					{
						this._IntegrationStatusID = default(long);
					}
					this.SendPropertyChanged("IntegrationStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
